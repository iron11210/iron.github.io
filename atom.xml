<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>杂项笔记</title>
    <subtitle></subtitle>
    <icon>http://example.com/images/favicon.ico</icon>
    <link href="http://example.com" />
    <author>
      <name>IRON</name>
    </author>
    <updated>2024-10-03T00:25:59.560Z</updated>
    <entry>
        <id>http://example.com/2024/10/03/database/lec8%20Schema%20Refinement%20and%20Normalisation/</id>
        <title>lec_8 Schema Refinement and Normalisation</title>
        <link rel="alternate" href="http://example.com/2024/10/03/database/lec8%20Schema%20Refinement%20and%20Normalisation/"/>
        <content type="html">&lt;h2 id=&#34;冗余和异常redundancy-and-anomalies&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#冗余和异常redundancy-and-anomalies&#34;&gt;#&lt;/a&gt; 冗余和异常（Redundancy and Anomalies）&lt;/h2&gt;
&lt;h3 id=&#34;1-冗余的定义与问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-冗余的定义与问题&#34;&gt;#&lt;/a&gt; 1. &lt;strong&gt;冗余的定义与问题&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;冗余指的是在数据库中存储重复的数据，这些数据会占用额外的存储空间并可能引发一致性问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;冗余的影响&lt;/strong&gt;：当同样的数据在多个地方存储时，如果在一个地方更新数据却忘记在其他地方同步更新，可能导致数据不一致。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-异常的类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-异常的类型&#34;&gt;#&lt;/a&gt; 2. &lt;strong&gt;异常的类型&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;冗余数据通常会引发三种主要的数据库操作异常：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;更新异常（Update Anomaly）&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;由于冗余存在，更新一个数据项时，可能需要在多个位置进行更新。如果忘记更新某些位置，数据库将进入不一致的状态。例如，某个课程的教室变更，如果没有同步更新所有相关记录，教室信息将会不一致​。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;插入异常（Insertion Anomaly）&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;在不良设计的数据库中，某些情况下插入新数据会受到限制。例如，如果一个课程表记录包含课程、教室和学生信息，但在没有学生的情况下无法为课程分配教室，这就是插入异常​。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;删除异常（Deletion Anomaly）&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;删除某些数据时，可能会意外删除其他有用的信息。例如，如果删除了所有选某门课的学生记录，可能会导致该课程本身的信息（如教室）也被删除，尽管课程还没有被取消​。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-解决冗余与异常的方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-解决冗余与异常的方法&#34;&gt;#&lt;/a&gt; 3. &lt;strong&gt;解决冗余与异常的方法&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;规范化（Normalization）&lt;/strong&gt;：通过规范化的过程（例如将表格分解为多个更小的表），可以减少或消除冗余数据，从而避免上述异常问题。例如，通过分解表结构来消除不必要的冗余信息，将多个相关信息存储在不同的表中，并通过外键进行关联​​。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;函数依赖functional-dependencies&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#函数依赖functional-dependencies&#34;&gt;#&lt;/a&gt; 函数依赖（Functional Dependencies）&lt;/h2&gt;
&lt;h3 id=&#34;1-函数依赖的定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-函数依赖的定义&#34;&gt;#&lt;/a&gt; 1. &lt;strong&gt;函数依赖的定义&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;非正式定义&lt;/strong&gt;：函数依赖描述了一个属性的值如何唯一地决定另一个属性的值。例如，给定课程代码（ &lt;code&gt;CourseCode&lt;/code&gt; ），就能唯一地确定课程名称（ &lt;code&gt;CourseName&lt;/code&gt; ）。记作： &lt;code&gt;CourseCode → CourseName&lt;/code&gt; ​​。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;正式定义&lt;/strong&gt;：如果属性集 X 的值唯一地决定了属性集 Y 的值，则称为 X 函数依赖于 Y，记作  &lt;code&gt;X → Y&lt;/code&gt; 。这意味着对于每个 X 的值，Y 的值只能有一个。因此，X 到 Y 的关系是确定的，并且不会产生多对一的映射​。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-函数依赖的识别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-函数依赖的识别&#34;&gt;#&lt;/a&gt; 2. &lt;strong&gt;函数依赖的识别&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;通过语义推理&lt;/strong&gt;：函数依赖通常通过属性之间的语义关系来确定。例如，在大学数据库中，学号（ &lt;code&gt;StudentID&lt;/code&gt; ）可以唯一决定学生的姓名（ &lt;code&gt;StudentName&lt;/code&gt; ）和年龄（ &lt;code&gt;StudentAge&lt;/code&gt; ）。这个依赖关系可以通过业务规则和语义来识别​。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;通过数据推理&lt;/strong&gt;：通过实际数据，可以分析并得出函数依赖关系。例如，通过分析学生和他们的课程数据，可以推导出某些属性之间的函数依赖。然而，仅通过观察数据无法保证找到所有函数依赖，因为函数依赖必须在所有可能的数据实例中都成立​。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-函数依赖的用途&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-函数依赖的用途&#34;&gt;#&lt;/a&gt; 3. &lt;strong&gt;函数依赖的用途&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;检测冗余&lt;/strong&gt;：函数依赖在检测数据库中的冗余时非常有用。通过识别哪些属性可以由其他属性唯一确定，我们可以识别冗余信息，并且通过规范化过程消除这些冗余​​。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;规范化&lt;/strong&gt;：函数依赖是数据库规范化的重要基础。通过函数依赖，可以将表格分解为符合第一范式（1NF）、第二范式（2NF）、第三范式（3NF）或 Boyce-Codd 范式（BCNF）的子表，从而避免冗余和异常。例如，如果我们知道  &lt;code&gt;CourseCode → CourseName&lt;/code&gt; ，则可以将课程代码和课程名称存储在一个单独的表中，而不在学生记录中重复存储​。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-函数依赖的示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-函数依赖的示例&#34;&gt;#&lt;/a&gt; 4. &lt;strong&gt;函数依赖的示例&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;实例 1&lt;/strong&gt;：在一个银行系统中，分支名称（ &lt;code&gt;BranchName&lt;/code&gt; ）可以唯一确定所在城市（ &lt;code&gt;City&lt;/code&gt; ）。即  &lt;code&gt;BranchName → City&lt;/code&gt; 。这表明，对于每个分支，其城市信息是唯一确定的​。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实例 2&lt;/strong&gt;：在一个课程数据库中，课程代码（ &lt;code&gt;CourseCode&lt;/code&gt; ）可以唯一确定课程名称和学分，即  &lt;code&gt;CourseCode → &amp;#123;CourseName, Credits&amp;#125;&lt;/code&gt; 。通过这一依赖关系，可以消除冗余并确保数据一致性​。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结：&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;函数依赖&lt;/strong&gt;用于描述数据库中属性之间的确定性关系，它是规范化过程的基础。通过函数依赖，可以识别冗余并消除异常，从而优化数据库设计，确保数据一致性和完整性。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;范式normal-forms&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#范式normal-forms&#34;&gt;#&lt;/a&gt; 范式（Normal Forms）&lt;/h2&gt;
&lt;h3 id=&#34;1-范式的定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-范式的定义&#34;&gt;#&lt;/a&gt; 1. &lt;strong&gt;范式的定义&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;范式&lt;/strong&gt;是数据库设计中用于评估和改进关系模式的标准，规范化的目标是减少数据冗余和避免更新、插入、删除异常。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-第一范式-1nf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-第一范式-1nf&#34;&gt;#&lt;/a&gt; 2. &lt;strong&gt;第一范式 (1NF)&lt;/strong&gt;：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;要求&lt;/strong&gt;：所有属性的值必须是&lt;strong&gt;原子&lt;/strong&gt;的，即每个字段都不能包含多个值或集合值。每一个关系都必须符合 1NF。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：假设有一个学生表，学生的电话存储在一个字段中作为一个列表，这违反了 1NF。为了符合 1NF，应该将电话拆分成多个独立的记录​。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-第二范式-2nf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-第二范式-2nf&#34;&gt;#&lt;/a&gt; 3. &lt;strong&gt;第二范式 (2NF)&lt;/strong&gt;：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;要求&lt;/strong&gt;：在满足 1NF 的基础上，消除&lt;strong&gt;部分依赖&lt;/strong&gt;。即任何非主属性都不应依赖于复合主键的一部分（适用于有复合主键的情况）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;解释&lt;/strong&gt;：如果一个表的主键是由多个属性组成的，则表中的非主属性应该完全依赖于主键的所有部分，而不是其中的一部分。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：如果我们有一个表，主键是 &lt;code&gt;&amp;#123;CourseCode, StudentID&amp;#125;&lt;/code&gt; ，而课程名称只依赖于 &lt;code&gt;CourseCode&lt;/code&gt; ，那么这是部分依赖，需要将课程信息拆分到单独的表中​。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-第三范式-3nf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-第三范式-3nf&#34;&gt;#&lt;/a&gt; 4. &lt;strong&gt;第三范式 (3NF)&lt;/strong&gt;：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;要求&lt;/strong&gt;：在满足 2NF 的基础上，消除&lt;strong&gt;传递依赖&lt;/strong&gt;。即非主属性不能依赖于另一个非主属性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;解释&lt;/strong&gt;：如果属性 A 依赖于主键，属性 B 又依赖于属性 A，那么 B 传递依赖于主键，这是需要避免的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：在一个学生表中，如果 &lt;code&gt;StudentID → DepartmentID&lt;/code&gt;  且 &lt;code&gt;DepartmentID → DepartmentName&lt;/code&gt; ，那么 &lt;code&gt;StudentID&lt;/code&gt;  传递地依赖于 &lt;code&gt;DepartmentName&lt;/code&gt; ，应将部门信息拆分到单独的表中​​。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-bcnf-boyce-codd范式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-bcnf-boyce-codd范式&#34;&gt;#&lt;/a&gt; 5. &lt;strong&gt;BCNF (Boyce-Codd 范式)&lt;/strong&gt;：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;要求&lt;/strong&gt;：BCNF 是 3NF 的加强版。对于每一个非平凡的函数依赖关系  &lt;code&gt;X → Y&lt;/code&gt; ，X 必须是候选键。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;解释&lt;/strong&gt;：BCNF 进一步消除了复杂的依赖关系。它的核心要求是确保所有决定其他属性的属性集必须是候选键的一部分。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：假设一个表的候选键是 &lt;code&gt;&amp;#123;A, B&amp;#125;&lt;/code&gt; ，但存在 &lt;code&gt;C → A&lt;/code&gt;  的依赖关系，且 C 不是候选键，这违反了 BCNF，因此需要对表进行进一步分解​​。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-多值依赖与第四范式-4nf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6-多值依赖与第四范式-4nf&#34;&gt;#&lt;/a&gt; 6. &lt;strong&gt;多值依赖与第四范式 (4NF)&lt;/strong&gt;：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;要求&lt;/strong&gt;：在满足 BCNF 的基础上，消除&lt;strong&gt;多值依赖&lt;/strong&gt;。即在表中，如果某个属性组独立地依赖于主键的不同部分，应该将其分解。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;解释&lt;/strong&gt;：多值依赖的情况是，某个属性可以有多个独立的值，与主键无关。4NF 要求消除这些多值依赖的关系。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：在一个学生表中，学生可能同时拥有多个电话号码和多个地址，这种情况会导致多值依赖，因此需要将电话号码和地址分成不同的表​。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7-范式化的过程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7-范式化的过程&#34;&gt;#&lt;/a&gt; 7. &lt;strong&gt;范式化的过程&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;通过识别和消除函数依赖、部分依赖、传递依赖以及多值依赖，将数据库模式分解为更小、更规范的表结构，从而消除冗余并避免异常​。&lt;/li&gt;
&lt;li&gt;该过程通常包括从 1NF 开始，逐步检查是否满足 2NF、3NF、BCNF 和 4NF，通过不断地分解关系来优化设计。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;多值依赖和第四范式multivalued-dependencies-and-4nf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多值依赖和第四范式multivalued-dependencies-and-4nf&#34;&gt;#&lt;/a&gt; 多值依赖和第四范式（Multivalued dependencies and 4NF）&lt;/h2&gt;
&lt;h3 id=&#34;1-多值依赖multivalued-dependency-mvd&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-多值依赖multivalued-dependency-mvd&#34;&gt;#&lt;/a&gt; 1. &lt;strong&gt;多值依赖（Multivalued Dependency, MVD）&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义&lt;/strong&gt;：多值依赖是指在某个关系中，如果属性集 Y 和属性集 Z 都依赖于属性集 X，但 Y 和 Z 之间彼此独立，则称 Y 和 Z 对 X 存在多值依赖，记作： &lt;code&gt;X ↠ Y&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;解释&lt;/strong&gt;：多值依赖通常发生在一种情况下，某个属性集与主键没有直接关联，但与主键的不同部分独立关联。例如，学生可能有多个电话号码和多个邮箱地址，但这两者之间是相互独立的，并且都依赖于学生的 ID​。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-第四范式4nf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-第四范式4nf&#34;&gt;#&lt;/a&gt; 2. &lt;strong&gt;第四范式（4NF）&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;要求&lt;/strong&gt;：在满足 BCNF 的基础上，第四范式要求消除多值依赖。即一个表不能同时有两个或多个独立于其他属性的多值依赖关系。换句话说，如果存在多值依赖  &lt;code&gt;X ↠ Y&lt;/code&gt; ，则 X 必须是候选键。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;解释&lt;/strong&gt;：如果一个关系中有多值依赖（即一个属性集可以有多个独立的值），那么这个关系就违反了 4NF。为了达到 4NF，必须将具有多值依赖的属性分解为多个关系。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;目标&lt;/strong&gt;：通过消除多值依赖，可以减少数据冗余，避免更新、插入和删除时产生的异常。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-多值依赖的示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-多值依赖的示例&#34;&gt;#&lt;/a&gt; 3. &lt;strong&gt;多值依赖的示例&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：假设有一个学生表，存储学生的姓名、电话号码和邮箱地址。一个学生可能有多个电话号码和多个邮箱地址，而电话号码和邮箱地址是彼此独立的。这种情况下，存在多值依赖，因为电话号码和邮箱地址独立于彼此，只是都依赖于学生 ID：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;StudentID ↠ PhoneNumber&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;StudentID ↠ EmailAddress&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了将表规范化到 4NF，我们需要将电话号码和邮箱地址分成两个独立的关系表，一个表存储学生与电话号码的关系，另一个表存储学生与邮箱地址的关系。这可以避免存储冗余数据并确保数据一致性​。&lt;/p&gt;
&lt;h3 id=&#34;4-消除多值依赖的步骤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-消除多值依赖的步骤&#34;&gt;#&lt;/a&gt; 4. &lt;strong&gt;消除多值依赖的步骤&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;分解关系&lt;/strong&gt;：如果一个关系中存在多值依赖，那么可以将其分解为两个或多个关系，以消除这些依赖。例如，将学生与电话号码的关系和学生与邮箱地址的关系分别存储在不同的表中。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;确保无损分解&lt;/strong&gt;：在进行分解时，必须确保分解后的关系能够通过自然连接（natural join）重新组合成原始的关系，且不丢失任何信息，这称为无损分解​。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;模式分解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模式分解&#34;&gt;#&lt;/a&gt; 模式分解&lt;/h2&gt;
&lt;h3 id=&#34;1-模式分解的目的&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-模式分解的目的&#34;&gt;#&lt;/a&gt; 1. &lt;strong&gt;模式分解的目的&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;减少冗余&lt;/strong&gt;：模式分解的主要目的是通过将一个大表拆分为多个更小的表，减少数据冗余。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;避免异常&lt;/strong&gt;：分解关系可以避免更新、插入和删除时产生的异常（如更新异常、插入异常和删除异常），从而确保数据的一致性和完整性​​。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;保持依赖&lt;/strong&gt;：分解过程中，要确保分解后的关系仍然保持原来的函数依赖，确保不丢失任何业务规则。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-无损分解lossless-decomposition&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-无损分解lossless-decomposition&#34;&gt;#&lt;/a&gt; 2. &lt;strong&gt;无损分解（Lossless Decomposition）&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义&lt;/strong&gt;：无损分解是指将一个关系分解为多个子关系后，通过这些子关系的自然连接操作（natural join）能够重新得到原始关系而不丢失信息。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;目标&lt;/strong&gt;：无损分解是模式分解的关键目标之一，确保我们在分解表时不会丢失数据或者引入错误的数据​。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：如果我们有一个关系  &lt;code&gt;R(A, B, C)&lt;/code&gt; ，并且满足  &lt;code&gt;A → B&lt;/code&gt; ，我们可以将关系分解为两个子关系  &lt;code&gt;R1(A, B)&lt;/code&gt;  和  &lt;code&gt;R2(A, C)&lt;/code&gt; 。此时，通过  &lt;code&gt;R1&lt;/code&gt;  和  &lt;code&gt;R2&lt;/code&gt;  的自然连接可以无损地还原原始关系​。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-保持依赖的分解dependency-preserving-decomposition&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-保持依赖的分解dependency-preserving-decomposition&#34;&gt;#&lt;/a&gt; 3. &lt;strong&gt;保持依赖的分解（Dependency-Preserving Decomposition）&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义&lt;/strong&gt;：保持依赖的分解是指，在分解一个关系时，分解后的所有子关系依然保留了原始关系中的所有函数依赖。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;目标&lt;/strong&gt;：在保持依赖的分解中，确保所有原始的业务规则（函数依赖）仍然适用于分解后的关系。如果某些依赖关系在分解后的子关系中无法体现，那么我们可能需要添加额外的机制（如触发器或检查约束）来保证这些依赖​​。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：如果我们有一个关系  &lt;code&gt;R(A, B, C)&lt;/code&gt;  且函数依赖为  &lt;code&gt;A → B&lt;/code&gt;  和  &lt;code&gt;B → C&lt;/code&gt; ，我们可以将关系分解为  &lt;code&gt;R1(A, B)&lt;/code&gt;  和  &lt;code&gt;R2(B, C)&lt;/code&gt; ，此时这两个子关系分别保留了  &lt;code&gt;A → B&lt;/code&gt;  和  &lt;code&gt;B → C&lt;/code&gt;  依赖​。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-分解为bcnf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-分解为bcnf&#34;&gt;#&lt;/a&gt; 4. &lt;strong&gt;分解为 BCNF&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BCNF 分解&lt;/strong&gt;：如果一个关系不符合 Boyce-Codd 范式（BCNF），我们可以通过分解它使其符合 BCNF。分解的过程通常包括以下步骤：
&lt;ul&gt;
&lt;li&gt;找到违反 BCNF 的依赖关系。&lt;/li&gt;
&lt;li&gt;根据依赖关系，将关系分解为两个子关系，一个子关系包含所有违反依赖的属性，另一个子关系包含剩余的属性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：如果我们有一个关系  &lt;code&gt;R(A, B, C)&lt;/code&gt; ，且  &lt;code&gt;A → B&lt;/code&gt; ，但  &lt;code&gt;B → C&lt;/code&gt; （且 B 不是候选键），我们可以将关系分解为  &lt;code&gt;R1(B, C)&lt;/code&gt;  和  &lt;code&gt;R2(A, B)&lt;/code&gt; ，确保每个子关系都符合 BCNF​。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-分解为4nf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-分解为4nf&#34;&gt;#&lt;/a&gt; 5. &lt;strong&gt;分解为 4NF&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;4NF 分解&lt;/strong&gt;：如果一个关系中存在多值依赖且不符合第四范式（4NF），我们可以通过分解关系来消除多值依赖。具体步骤与 BCNF 分解类似，但重点是消除多值依赖​。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-分解过程的注意事项&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6-分解过程的注意事项&#34;&gt;#&lt;/a&gt; 6. &lt;strong&gt;分解过程的注意事项&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在分解过程中，必须确保两点：
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;无损连接&lt;/strong&gt;：分解后的关系在自然连接时，能够无损还原原始关系。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;保持依赖&lt;/strong&gt;：分解后的关系必须保留原始的所有函数依赖，以确保数据库的完整性和业务规则的正确性​。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="数据库" scheme="http://example.com/categories/database/" />
        <updated>2024-10-03T00:25:59.560Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/09/30/database/lec7%20python%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
        <title>lec_7 Python连接数据库</title>
        <link rel="alternate" href="http://example.com/2024/09/30/database/lec7%20python%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
        <content type="html">&lt;h2 id=&#34;1使用python连接数据库并进行操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1使用python连接数据库并进行操作&#34;&gt;#&lt;/a&gt; 1. 使用 python 连接数据库并进行操作&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;cursor 的基本使用&lt;br&gt;
 &lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption&gt;&lt;span&gt;行高亮&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#1. 创建cursor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cursor = connection.cursor()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#2. 执行sql语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cursor.execute(sql_query, parameters)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#示例 解释：此查询将返回 `HR` 部门的所有员工。`%s` 是占位符，第二个参数提供了实际的值，防止 SQL 注入。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cursor.execute(&lt;span class=&#34;string&#34;&gt;&amp;quot;SELECT * FROM Employees WHERE department = %s;&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;string&#34;&gt;&amp;#x27;HR&amp;#x27;&lt;/span&gt;,))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#在执行 `SELECT` 查询后，`Cursor` 提供了多种方法来获取结果集中的数据。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#3.查询执行结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#fetchone()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#获取查询结果的下一行，返回一个元组。如果没有更多行，返回 `None`。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;row = cursor.fetchone()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(row)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#fetchall() 获取查询结果的所有行，返回一个包含多个元组的列表。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rows = cursor.fetchall()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; row &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; rows:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(row)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#fetchmany(size) 获取指定数量的行（`size` 是行的数量），返回一个包含多个元组的列表。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rows = cursor.fetchmany(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 获取5行数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#4.迭代 Cursor 可以将 `Cursor` 作为迭代器来逐行遍历结果集。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cursor.execute(&lt;span class=&#34;string&#34;&gt;&amp;quot;SELECT * FROM Employees;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; row &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; cursor:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(row)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#5. executemany() 方法用于执行多条 SQL 语句，通常是 `INSERT` 或 `UPDATE`。它会将同一条 SQL 语句应用于一组参数集合。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;query = &lt;span class=&#34;string&#34;&gt;&amp;quot;INSERT INTO Employees (employee_id, name, department, salary) VALUES (%s, %s, %s, %s)&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data = [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;Alice&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;HR&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;60000&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;Bob&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;Engineering&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;75000&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;Charlie&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;Marketing&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;50000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cursor.executemany(query, data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;connection.commit()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#6. 事务控制&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#当执行插入、更新或删除操作时，必须调用 `commit()` 方法来提交事务，使更改生效。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;connection.commit()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#如果在执行 SQL 语句期间发生错误，可以调用 `rollback()` 方法撤销更改，回滚到事务开始前的状态。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;connection.rollback()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#7.关闭 Cursor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#在完成对数据库的操作后，应该关闭 `Cursor` 以释放资源。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cursor.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#8.获取查询状态&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#rowcount：返回由最近的 `execute()` 操作影响的行数（例如 `INSERT`、`UPDATE`、`DELETE`）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cursor.execute(&lt;span class=&#34;string&#34;&gt;&amp;quot;UPDATE Employees SET salary = salary + 5000 WHERE department = &amp;#x27;HR&amp;#x27;;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(cursor.rowcount, &lt;span class=&#34;string&#34;&gt;&amp;quot;rows affected&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#`statusmessage`：返回最近一次执行操作的状态信息。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(cursor.statusmessage)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#9.游标的移动和控制&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#`scroll()`：允许你在结果集内移动游标。例如，可以向前或向后移动指定的行数。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cursor.execute(&lt;span class=&#34;string&#34;&gt;&amp;quot;SELECT * FROM Employees;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cursor.scroll(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 游标前进2行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;row = cursor.fetchone()  &lt;span class=&#34;comment&#34;&gt;# 获取游标所在行的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(row)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#`description`：返回结果集中每一列的元数据，如列名等。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cursor.execute(&lt;span class=&#34;string&#34;&gt;&amp;quot;SELECT * FROM Employees;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; col &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; cursor.description:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(col.name)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;常用语句总结&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;execute(sql, params)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;执行单条 SQL 语句。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;executemany(sql, data)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;执行多条 SQL 语句（批量插入或更新）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fetchone()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;获取查询结果的下一行。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fetchall()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;获取查询结果的所有行。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fetchmany(size)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;获取指定数量的行。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;scroll(value)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在结果集中移动游标。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;commit()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;提交当前事务。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rollback()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;回滚当前事务。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;关闭游标，释放资源。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rowcount&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;获取最近一次操作影响的行数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;description&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;获取查询的元数据（列名、数据类型等）。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;连接示例&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption&gt;&lt;span&gt;raw&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; psycopg2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 数据库连接参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DB_HOST = &lt;span class=&#34;string&#34;&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DB_NAME = &lt;span class=&#34;string&#34;&gt;&amp;quot;your_database&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DB_USER = &lt;span class=&#34;string&#34;&gt;&amp;quot;your_username&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DB_PASS = &lt;span class=&#34;string&#34;&gt;&amp;quot;your_password&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DB_PORT = &lt;span class=&#34;string&#34;&gt;&amp;quot;5432&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 1. 连接到 PostgreSQL 数据库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    connection = psycopg2.connect(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        host=DB_HOST,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        database=DB_NAME,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        user=DB_USER,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        password=DB_PASS,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        port=DB_PORT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 2. 创建一个游标对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cursor = connection.cursor()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 3. 执行 SQL 查询&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cursor.execute(&lt;span class=&#34;string&#34;&gt;&amp;quot;SELECT version();&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 4. 获取查询结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    db_version = cursor.fetchone()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;quot;PostgreSQL 版本: &lt;span class=&#34;subst&#34;&gt;&amp;#123;db_version&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 5. 插入数据的示例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cursor.execute(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        INSERT INTO Employees (employee_id, name, department, salary, hire_date, city, age)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        VALUES (6, &amp;#x27;John Doe&amp;#x27;, &amp;#x27;Sales&amp;#x27;, 45000, &amp;#x27;2022-09-15&amp;#x27;, &amp;#x27;Boston&amp;#x27;, 29);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 提交事务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    connection.commit()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 6. 执行查询来检查插入结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cursor.execute(&lt;span class=&#34;string&#34;&gt;&amp;quot;SELECT * FROM Employees WHERE employee_id = 6;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    new_employee = cursor.fetchone()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;quot;新员工数据: &lt;span class=&#34;subst&#34;&gt;&amp;#123;new_employee&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt; Exception &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; error:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;quot;数据库操作出现错误: &lt;span class=&#34;subst&#34;&gt;&amp;#123;error&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;finally&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 7. 关闭游标和连接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; cursor:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cursor.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; connection:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        connection.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;使用建议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用建议&#34;&gt;#&lt;/a&gt; 使用建议&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;关闭游标和连接&lt;/strong&gt;：无论是否发生异常，在操作结束时都应关闭游标和连接，确保资源得到释放。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;事务控制&lt;/strong&gt;：使用  &lt;code&gt;commit()&lt;/code&gt;  提交数据，使用  &lt;code&gt;rollback()&lt;/code&gt;  进行回滚，确保数据一致性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全性&lt;/strong&gt;：始终使用参数化查询防止 SQL 注入。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Cursor&lt;/code&gt;  是在 Python 中与数据库交互的核心工具，掌握其操作有助于编写高效、健壮的数据库应用程序。&lt;/p&gt;
</content>
        <category term="数据库" scheme="http://example.com/categories/database/" />
        <updated>2024-09-30T06:12:43.865Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/09/29/database/lec_6%20Advanced%20SQL/</id>
        <title>lec_6 Advanced SQL</title>
        <link rel="alternate" href="http://example.com/2024/09/29/database/lec_6%20Advanced%20SQL/"/>
        <content type="html">&lt;h2 id=&#34;嵌套查询nested-queries&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#嵌套查询nested-queries&#34;&gt;#&lt;/a&gt; 嵌套查询（Nested Queries）&lt;/h2&gt;
&lt;h3 id=&#34;1-嵌套查询的定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-嵌套查询的定义&#34;&gt;#&lt;/a&gt; 1. &lt;strong&gt;嵌套查询的定义&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;嵌套查询是指在一个 SQL 查询的  &lt;code&gt;WHERE&lt;/code&gt; 、 &lt;code&gt;FROM&lt;/code&gt; 、或  &lt;code&gt;SELECT&lt;/code&gt;  子句中嵌套另一个查询（子查询）。子查询先执行，其结果用于主查询。嵌套查询常用于需要多步过滤、动态生成条件或复杂的数据处理的场景。&lt;/p&gt;
&lt;h3 id=&#34;2-嵌套查询的类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-嵌套查询的类型&#34;&gt;#&lt;/a&gt; 2. &lt;strong&gt;嵌套查询的类型&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;嵌套查询可以根据使用位置分为几种类型：&lt;/p&gt;
&lt;h4 id=&#34;1-where-子句中的子查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-where-子句中的子查询&#34;&gt;#&lt;/a&gt; &lt;strong&gt;(1)  &lt;code&gt;WHERE&lt;/code&gt;  子句中的子查询&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;这种子查询返回单个值或一组值，主查询会根据这些返回的结果进行过滤。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; name&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Students&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; student_id &lt;span class=&#34;keyword&#34;&gt;IN&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; student_id&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Enrollments&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; course_code &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;COMP1234&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;解释&lt;/strong&gt;：此查询查找所有选修了  &lt;code&gt;COMP1234&lt;/code&gt;  课程的学生姓名。子查询返回所有注册该课程的学生 ID，主查询根据这些 ID 过滤学生表。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-from-子句中的子查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-from-子句中的子查询&#34;&gt;#&lt;/a&gt; &lt;strong&gt;(2)  &lt;code&gt;FROM&lt;/code&gt;  子句中的子查询&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;子查询可以作为临时表使用。主查询可以基于这个临时表进行查询。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;AVG&lt;/span&gt;(total_marks)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;SUM&lt;/span&gt;(marks) &lt;span class=&#34;keyword&#34;&gt;AS&lt;/span&gt; total_marks&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Grades&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;BY&lt;/span&gt; student_id&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;) &lt;span class=&#34;keyword&#34;&gt;AS&lt;/span&gt; StudentTotals;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;解释&lt;/strong&gt;：子查询计算每个学生的总分数，然后主查询计算所有学生总分数的平均值。子查询作为临时表  &lt;code&gt;StudentTotals&lt;/code&gt;  使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-select-子句中的子查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-select-子句中的子查询&#34;&gt;#&lt;/a&gt; &lt;strong&gt;(3)  &lt;code&gt;SELECT&lt;/code&gt;  子句中的子查询&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;在  &lt;code&gt;SELECT&lt;/code&gt;  子句中，子查询会为主查询的每一行执行一次，用于动态生成列值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; name, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       (&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;COUNT&lt;/span&gt;(&lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Enrollments &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; Enrollments.student_id &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; Students.student_id) &lt;span class=&#34;keyword&#34;&gt;AS&lt;/span&gt; num_courses&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Students;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;解释&lt;/strong&gt;：此查询返回每个学生的名字以及他们注册的课程数量。子查询为每个学生执行一次。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-相关子查询correlated-subqueries&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-相关子查询correlated-subqueries&#34;&gt;#&lt;/a&gt; 3. &lt;strong&gt;相关子查询（Correlated Subqueries）&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;相关子查询是一种特殊的嵌套查询，它依赖于外部查询中的每一行，因此每次执行都会使用主查询的当前行的值。与普通子查询不同，相关子查询不能独立执行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; name&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Students S&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;EXISTS&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Enrollments E&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; E.student_id &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; S.student_id&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;AND&lt;/span&gt; E.course_code &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;COMP1234&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;解释&lt;/strong&gt;：对于每个学生  &lt;code&gt;S&lt;/code&gt; ，子查询检查该学生是否注册了  &lt;code&gt;COMP1234&lt;/code&gt;  课程。子查询依赖于主查询的当前学生行。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-子查询与运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-子查询与运算符&#34;&gt;#&lt;/a&gt; 4. &lt;strong&gt;子查询与运算符&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;子查询可以与多种运算符结合使用，常见的运算符有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;IN&lt;/code&gt; &lt;/strong&gt;：用于检查一个值是否在子查询的结果集内。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;： &lt;code&gt;WHERE column_name IN (SELECT ...)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;EXISTS&lt;/code&gt; &lt;/strong&gt;：用于检查子查询是否返回任何行。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;： &lt;code&gt;WHERE EXISTS (SELECT ...)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;ANY&lt;/code&gt;  和  &lt;code&gt;ALL&lt;/code&gt; &lt;/strong&gt;：用于与比较运算符结合使用，判断某值是否与子查询结果集中的任意值或所有值进行比较。
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;： &lt;code&gt;WHERE column_name &amp;gt; ANY (SELECT ...)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-嵌套查询的性能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-嵌套查询的性能&#34;&gt;#&lt;/a&gt; 5. &lt;strong&gt;嵌套查询的性能&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;虽然嵌套查询在处理复杂逻辑时非常强大，但它们可能会对性能产生影响，特别是当子查询涉及大量数据时。因此，在某些情况下，可以将嵌套查询重构为 &lt;code&gt;JOIN&lt;/code&gt;  操作以提高性能。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; S.name&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Students S&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;JOIN&lt;/span&gt; Enrollments E &lt;span class=&#34;keyword&#34;&gt;ON&lt;/span&gt; S.student_id &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; E.student_id&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; E.course_code &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;COMP1234&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;这种 &lt;code&gt;JOIN&lt;/code&gt;  查询有时可以替代子查询，提高查询效率，特别是在数据量较大时。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-嵌套查询的用途&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6-嵌套查询的用途&#34;&gt;#&lt;/a&gt; 6. &lt;strong&gt;嵌套查询的用途&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;嵌套查询非常适合用于以下场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需要多层过滤条件。&lt;/li&gt;
&lt;li&gt;需要根据另一张表动态生成数据。&lt;/li&gt;
&lt;li&gt;需要在查询中嵌入复杂的逻辑判断。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h3&gt;
&lt;p&gt;嵌套查询提供了强大的数据处理能力，允许你在查询中使用其他查询的结果进行过滤、计算或动态生成数据。Lecture 6 详细讲解了如何利用嵌套查询处理复杂的业务需求，以及如何通过 &lt;code&gt;IN&lt;/code&gt; 、 &lt;code&gt;EXISTS&lt;/code&gt; 、 &lt;code&gt;JOIN&lt;/code&gt;  等技术优化查询性能。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;视图views&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#视图views&#34;&gt;#&lt;/a&gt; 视图（Views）&lt;/h2&gt;
&lt;h3 id=&#34;1-什么是视图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-什么是视图&#34;&gt;#&lt;/a&gt; 1. 什么是视图？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;视图&lt;/strong&gt; 是基于 SQL 查询结果生成的 &lt;strong&gt;虚拟表&lt;/strong&gt;。视图本身不存储实际数据，它保存的是一个 SQL 查询定义。每当访问视图时，数据库会执行该查询并返回结果。&lt;/li&gt;
&lt;li&gt;视图用于简化复杂查询、提升数据安全性、以及为数据提供抽象层。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-创建视图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-创建视图&#34;&gt;#&lt;/a&gt; 2. 创建视图&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;视图使用  &lt;code&gt;CREATE VIEW&lt;/code&gt;  语句创建。创建视图时，定义的查询可以像表一样使用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;VIEW&lt;/span&gt; view_name &lt;span class=&#34;keyword&#34;&gt;AS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; column1, column2, ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; table_name&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;condition&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
&lt;strong&gt; 示例&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;VIEW&lt;/span&gt; high_salary_employees &lt;span class=&#34;keyword&#34;&gt;AS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; employee_id, name, salary&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Employees&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; salary &lt;span class=&#34;operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;50000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;这个视图筛选出所有工资超过 50,000 的员工信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-使用视图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-使用视图&#34;&gt;#&lt;/a&gt; 3. 使用视图&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;视图可以像物理表一样被查询和操作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; high_salary_employees;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;这会返回所有工资超过 50,000 的员工数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-修改视图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-修改视图&#34;&gt;#&lt;/a&gt; 4. 修改视图&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;视图可以通过  &lt;code&gt;CREATE OR REPLACE VIEW&lt;/code&gt;  语句修改，不需要先删除再创建。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;OR&lt;/span&gt; REPLACE &lt;span class=&#34;keyword&#34;&gt;VIEW&lt;/span&gt; high_salary_employees &lt;span class=&#34;keyword&#34;&gt;AS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; employee_id, name, salary, department&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Employees&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; salary &lt;span class=&#34;operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;60000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
 这段代码更新了视图的定义，改变了工资过滤条件并增加了一个  &lt;code&gt;department&lt;/code&gt;  列。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-视图的优势&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-视图的优势&#34;&gt;#&lt;/a&gt; 5. 视图的优势&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;简化复杂查询&lt;/strong&gt;：可以通过视图封装复杂查询，使其更易于复用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据安全性&lt;/strong&gt;：可以通过视图隐藏表中的某些列，限制用户只能访问特定数据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;提高可读性&lt;/strong&gt;：视图为复杂的数据处理提供了抽象层，代码更加简洁易读。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-视图的局限性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6-视图的局限性&#34;&gt;#&lt;/a&gt; 6. 视图的局限性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;性能问题&lt;/strong&gt;：视图是动态生成的，涉及复杂查询的视图可能会降低查询性能，尤其是涉及大量数据时。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;只读视图&lt;/strong&gt;：有些视图是只读的，不能进行  &lt;code&gt;INSERT&lt;/code&gt; 、 &lt;code&gt;UPDATE&lt;/code&gt;  或  &lt;code&gt;DELETE&lt;/code&gt;  操作，尤其是当视图基于多表、聚合函数或  &lt;code&gt;DISTINCT&lt;/code&gt;  时。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;7-删除视图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7-删除视图&#34;&gt;#&lt;/a&gt; 7. 删除视图&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;可以使用  &lt;code&gt;DROP VIEW&lt;/code&gt;  语句删除视图。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语法&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;DROP&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;VIEW&lt;/span&gt; view_name;   &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8表和视图的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8表和视图的区别&#34;&gt;#&lt;/a&gt; 8. 表和视图的区别&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特性&lt;/th&gt;
&lt;th&gt;表（Table）&lt;/th&gt;
&lt;th&gt;视图（View）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;数据存储&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;实际存储数据&lt;/td&gt;
&lt;td&gt;不存储数据，基于查询的虚拟表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;物理存储&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;有独立的存储空间&lt;/td&gt;
&lt;td&gt;没有独立的存储空间，依赖底层表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;数据操作&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;支持  &lt;code&gt;INSERT&lt;/code&gt; 、 &lt;code&gt;UPDATE&lt;/code&gt; 、 &lt;code&gt;DELETE&lt;/code&gt;  操作&lt;/td&gt;
&lt;td&gt;视图可能只读，有些视图可更新&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;用途&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;存储原始数据&lt;/td&gt;
&lt;td&gt;简化查询、提供数据抽象、安全性控制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;性能&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;取决于表的大小和索引&lt;/td&gt;
&lt;td&gt;取决于视图的查询复杂度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;安全性&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;通过权限管理控制对表的访问&lt;/td&gt;
&lt;td&gt;通过视图控制用户对特定数据的访问&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;聚合与分组aggregation-and-grouping&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#聚合与分组aggregation-and-grouping&#34;&gt;#&lt;/a&gt; &lt;strong&gt;聚合与分组（Aggregation and Grouping）&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;1-聚合函数aggregation-functions&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-聚合函数aggregation-functions&#34;&gt;#&lt;/a&gt; 1. &lt;strong&gt;聚合函数（Aggregation Functions）&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;聚合函数用于对一组数据执行计算，并返回一个单一值。这些函数通常用于统计、求和、平均值等操作。常见的聚合函数包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;COUNT()&lt;/code&gt; &lt;/strong&gt;：统计行的数量。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;SUM()&lt;/code&gt; &lt;/strong&gt;：计算数值列的总和。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;AVG()&lt;/code&gt; &lt;/strong&gt;：计算数值列的平均值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;MAX()&lt;/code&gt; &lt;/strong&gt;：返回列中的最大值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;MIN()&lt;/code&gt; &lt;/strong&gt;：返回列中的最小值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#示例&#34;&gt;#&lt;/a&gt; 示例：&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;COUNT&lt;/span&gt;(&lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;AS&lt;/span&gt; total_students, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;built_in&#34;&gt;AVG&lt;/span&gt;(age) &lt;span class=&#34;keyword&#34;&gt;AS&lt;/span&gt; average_age, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;built_in&#34;&gt;MAX&lt;/span&gt;(salary) &lt;span class=&#34;keyword&#34;&gt;AS&lt;/span&gt; highest_salary &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Employees;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;解释&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;COUNT(*)&lt;/code&gt; : 统计表中的总行数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AVG(age)&lt;/code&gt; : 计算员工的平均年龄。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MAX(salary)&lt;/code&gt; : 返回最高的工资。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-分组group-by&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-分组group-by&#34;&gt;#&lt;/a&gt; 2. &lt;strong&gt;分组（GROUP BY）&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;GROUP BY&lt;/code&gt;  用于将查询结果按一列或多列的值进行分组。然后可以对每个分组应用聚合函数进行汇总计算。 &lt;code&gt;GROUP BY&lt;/code&gt;  常用于分类统计、按类别聚合数据等场景。&lt;/p&gt;
&lt;h4 id=&#34;基本语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本语法&#34;&gt;#&lt;/a&gt; 基本语法：&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; column1, column2, aggregate_function(column3)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; table_name&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;BY&lt;/span&gt; column1, column2;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;示例-1按部门统计员工数量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#示例-1按部门统计员工数量&#34;&gt;#&lt;/a&gt; 示例 1：按部门统计员工数量&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; department, &lt;span class=&#34;built_in&#34;&gt;COUNT&lt;/span&gt;(&lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;AS&lt;/span&gt; num_employees &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Employees &lt;span class=&#34;keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;BY&lt;/span&gt; department;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;解释&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GROUP BY department&lt;/code&gt; ：将员工按部门分组。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;COUNT(*)&lt;/code&gt; ：计算每个部门的员工数量。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;示例-2按课程统计学生注册人数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#示例-2按课程统计学生注册人数&#34;&gt;#&lt;/a&gt; 示例 2：按课程统计学生注册人数&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; course_id, &lt;span class=&#34;built_in&#34;&gt;COUNT&lt;/span&gt;(student_id) &lt;span class=&#34;keyword&#34;&gt;AS&lt;/span&gt; num_students&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Enrollments&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;BY&lt;/span&gt; course_id;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;解释&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GROUP BY course_id&lt;/code&gt; ：按课程 ID 分组。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;COUNT(student_id)&lt;/code&gt; ：统计每个课程注册的学生数量。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-结合-group-by-和聚合函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-结合-group-by-和聚合函数&#34;&gt;#&lt;/a&gt; 3. &lt;strong&gt;结合  &lt;code&gt;GROUP BY&lt;/code&gt;  和聚合函数&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;在  &lt;code&gt;GROUP BY&lt;/code&gt;  后，可以结合聚合函数对每个分组的数据进行统计计算。这种组合非常适用于分类汇总数据。&lt;/p&gt;
&lt;h4 id=&#34;示例-3按城市统计平均工资&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#示例-3按城市统计平均工资&#34;&gt;#&lt;/a&gt; 示例 3：按城市统计平均工资&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; city, &lt;span class=&#34;built_in&#34;&gt;AVG&lt;/span&gt;(salary) &lt;span class=&#34;keyword&#34;&gt;AS&lt;/span&gt; average_salary&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Employees&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;BY&lt;/span&gt; city;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;解释&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GROUP BY city&lt;/code&gt; ：将员工按所在城市分组。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AVG(salary)&lt;/code&gt; ：计算每个城市的平均工资。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-having-子句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-having-子句&#34;&gt;#&lt;/a&gt; 4. &lt;strong&gt; &lt;code&gt;HAVING&lt;/code&gt;  子句&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;HAVING&lt;/code&gt;  子句用于在分组之后对分组后的数据进行过滤。与  &lt;code&gt;WHERE&lt;/code&gt;  子句不同， &lt;code&gt;HAVING&lt;/code&gt;  主要用于处理聚合后的结果集，通常结合  &lt;code&gt;GROUP BY&lt;/code&gt;  使用。&lt;/p&gt;
&lt;h4 id=&#34;示例-4过滤出注册人数大于100的课程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#示例-4过滤出注册人数大于100的课程&#34;&gt;#&lt;/a&gt; 示例 4：过滤出注册人数大于 100 的课程&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; course_id, &lt;span class=&#34;built_in&#34;&gt;COUNT&lt;/span&gt;(student_id) &lt;span class=&#34;keyword&#34;&gt;AS&lt;/span&gt; num_students&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Enrollments&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;BY&lt;/span&gt; course_id&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;HAVING&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;COUNT&lt;/span&gt;(student_id) &lt;span class=&#34;operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;解释&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GROUP BY course_id&lt;/code&gt; ：将数据按课程 ID 分组。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HAVING COUNT(student_id) &amp;gt; 100&lt;/code&gt; ：过滤出注册人数超过 100 的课程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-group-by-与-order-by-一起使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-group-by-与-order-by-一起使用&#34;&gt;#&lt;/a&gt; 5. &lt;strong&gt; &lt;code&gt;GROUP BY&lt;/code&gt;  与  &lt;code&gt;ORDER BY&lt;/code&gt;  一起使用&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;可以使用  &lt;code&gt;GROUP BY&lt;/code&gt;  和  &lt;code&gt;ORDER BY&lt;/code&gt;  组合，对分组后的结果进行排序。通常用于根据聚合值对结果进行排序。&lt;/p&gt;
&lt;h4 id=&#34;示例-5按部门统计员工数量并按数量排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#示例-5按部门统计员工数量并按数量排序&#34;&gt;#&lt;/a&gt; 示例 5：按部门统计员工数量并按数量排序&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; department, &lt;span class=&#34;built_in&#34;&gt;COUNT&lt;/span&gt;(&lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;AS&lt;/span&gt; num_employees&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Employees&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;BY&lt;/span&gt; department&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;BY&lt;/span&gt; num_employees &lt;span class=&#34;keyword&#34;&gt;DESC&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;解释&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GROUP BY department&lt;/code&gt; ：按部门分组。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;COUNT(*)&lt;/code&gt; ：计算每个部门的员工数量。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ORDER BY num_employees DESC&lt;/code&gt; ：按员工数量降序排序。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;总结-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结-2&#34;&gt;#&lt;/a&gt; 总结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;聚合函数&lt;/strong&gt;：用于对一组数据进行汇总操作，如求和、计数、最大值、最小值、平均值等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;GROUP BY&lt;/code&gt; &lt;/strong&gt;：用于将查询结果按列值分组，并对每个分组应用聚合函数进行统计。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;HAVING&lt;/code&gt;  子句&lt;/strong&gt;：用于在分组之后对结果进行进一步的过滤，常与  &lt;code&gt;GROUP BY&lt;/code&gt;  结合使用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;ORDER BY&lt;/code&gt;  子句&lt;/strong&gt;：可以与  &lt;code&gt;GROUP BY&lt;/code&gt;  一起使用，用于对分组后的结果进行排序。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;set运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#set运算符&#34;&gt;#&lt;/a&gt; set 运算符&lt;/h2&gt;
&lt;h3 id=&#34;1-union并集运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-union并集运算符&#34;&gt;#&lt;/a&gt; 1. &lt;strong&gt;UNION&lt;/strong&gt;：并集运算符&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;作用&lt;/strong&gt;： &lt;code&gt;UNION&lt;/code&gt;  运算符用于合并两个查询的结果集，并去除重复的行。换句话说， &lt;code&gt;UNION&lt;/code&gt;  返回两个查询结果的并集，并只保留唯一的行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;语法&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; column1, column2, ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; table1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;UNION&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; column1, column2, ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; table2;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;特点&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;默认去除重复行。&lt;/li&gt;
&lt;li&gt;列的数量、顺序、数据类型必须在两个查询中一致。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Employees&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;UNION&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Customers;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-union-all并集包含重复值&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-union-all并集包含重复值&#34;&gt;#&lt;/a&gt; 2. &lt;strong&gt;UNION ALL&lt;/strong&gt;：并集（包含重复值）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;作用&lt;/strong&gt;： &lt;code&gt;UNION ALL&lt;/code&gt;  与  &lt;code&gt;UNION&lt;/code&gt;  类似，但它不会去除重复行，它会返回所有结果，包括重复的行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;语法&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; column1, column2, ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; table1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;ALL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; column1, column2, ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; table2;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Employees&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;ALL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Customers;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-intersect交集运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-intersect交集运算符&#34;&gt;#&lt;/a&gt; 3. &lt;strong&gt;INTERSECT&lt;/strong&gt;：交集运算符&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;作用&lt;/strong&gt;： &lt;code&gt;INTERSECT&lt;/code&gt;  运算符用于返回两个查询结果的交集，即两个结果集中都包含的行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;语法&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; column1, column2, ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; table1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;INTERSECT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; column1, column2, ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; table2;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;特点&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只返回两个查询结果中都存在的行。&lt;/li&gt;
&lt;li&gt;列的数量、顺序、数据类型必须在两个查询中一致。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Employees&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;INTERSECT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Customers;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;返回既在  &lt;code&gt;Employees&lt;/code&gt;  表中也在  &lt;code&gt;Customers&lt;/code&gt;  表中的  &lt;code&gt;name&lt;/code&gt; 。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-except或-minus差集运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-except或-minus差集运算符&#34;&gt;#&lt;/a&gt; 4. &lt;strong&gt;EXCEPT&lt;/strong&gt;（或  &lt;code&gt;MINUS&lt;/code&gt; ）：差集运算符&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;作用&lt;/strong&gt;： &lt;code&gt;EXCEPT&lt;/code&gt; （在某些数据库中也叫  &lt;code&gt;MINUS&lt;/code&gt; ）运算符用于返回第一个查询结果集中有，但第二个查询结果集中没有的行。它相当于集合的差集操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;语法&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; column1, column2, ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; table1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;EXCEPT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; column1, column2, ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; table2;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;特点&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;返回只在第一个查询中出现的行，而在第二个查询中不存在的行。&lt;/li&gt;
&lt;li&gt;列的数量、顺序、数据类型必须在两个查询中一致。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Employees&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;EXCEPT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Customers;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;返回在  &lt;code&gt;Employees&lt;/code&gt;  表中但不在  &lt;code&gt;Customers&lt;/code&gt;  表中的  &lt;code&gt;name&lt;/code&gt; 。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;注意事项&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注意事项&#34;&gt;#&lt;/a&gt; 注意事项：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;列的数量和类型&lt;/strong&gt;：使用 SET 运算符的查询中，两个查询返回的列的数量、顺序、数据类型必须相同。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;排序&lt;/strong&gt;：通常情况下， &lt;code&gt;ORDER BY&lt;/code&gt;  子句只能应用在最终的结果集上，而不能分别应用到每个单独的查询。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;示例场景&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#示例场景&#34;&gt;#&lt;/a&gt; 示例场景：&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;查询在两个表中都有的记录&lt;/strong&gt;（交集）：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; email &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Employees&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;INTERSECT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; email &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Customers;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;返回同时存在于  &lt;code&gt;Employees&lt;/code&gt;  和  &lt;code&gt;Customers&lt;/code&gt;  表中的电子邮件地址。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;查询只存在于一个表中的记录&lt;/strong&gt;（差集）：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; email &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Employees&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;EXCEPT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; email &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Customers;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
 返回存在于  &lt;code&gt;Employees&lt;/code&gt;  表中但不存在于  &lt;code&gt;Customers&lt;/code&gt;  表中的电子邮件地址。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;合并两个表中的记录&lt;/strong&gt;（并集）：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; email &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Employees&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;UNION&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; email &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Customers;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;返回  &lt;code&gt;Employees&lt;/code&gt;  和  &lt;code&gt;Customers&lt;/code&gt;  表中所有唯一的电子邮件地址。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;总结-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结-3&#34;&gt;#&lt;/a&gt; 总结：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;UNION&lt;/code&gt; &lt;/strong&gt;：合并两个查询的结果集，去除重复行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;UNION ALL&lt;/code&gt; &lt;/strong&gt;：合并两个查询的结果集，保留所有行（包括重复行）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;INTERSECT&lt;/code&gt; &lt;/strong&gt;：返回两个查询结果集的交集（都存在的行）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;EXCEPT&lt;/code&gt; &lt;/strong&gt;（或  &lt;code&gt;MINUS&lt;/code&gt; ）：返回只存在于第一个查询结果集中的行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SET 运算符在 SQL 查询中非常有用，特别是在需要组合、比较或处理多个数据集时。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;null-values-and-three-valued-logic&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#null-values-and-three-valued-logic&#34;&gt;#&lt;/a&gt; NULL Values and Three-valued Logic&lt;/h2&gt;
&lt;h3 id=&#34;1-null-值&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-null-值&#34;&gt;#&lt;/a&gt; &lt;strong&gt;1. NULL 值&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt; 表示缺失的、未知的或不可用的值。它不是空字符串 ( &lt;code&gt;&#39;&#39;&lt;/code&gt; ) 或零 ( &lt;code&gt;0&lt;/code&gt; )，而是一个特殊的值，表示该列在某行中没有数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;如何理解-null&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#如何理解-null&#34;&gt;#&lt;/a&gt; &lt;strong&gt;如何理解 NULL&lt;/strong&gt;：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;NULL&lt;/strong&gt; 不等于任何值，包括它自身。也就是说， &lt;code&gt;NULL != NULL&lt;/code&gt; ， &lt;code&gt;NULL = NULL&lt;/code&gt;  的结果也是  &lt;code&gt;FALSE&lt;/code&gt;  或  &lt;code&gt;UNKNOWN&lt;/code&gt; ，因为 NULL 表示未知，因此两个 NULL 不能被比较为相等。&lt;/li&gt;
&lt;li&gt;在计算中，涉及 NULL 的表达式结果通常也是 NULL。例如， &lt;code&gt;5 + NULL&lt;/code&gt;  或  &lt;code&gt;NULL + NULL&lt;/code&gt;  的结果都是 NULL。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;查询中的-null&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查询中的-null&#34;&gt;#&lt;/a&gt; &lt;strong&gt;查询中的 NULL&lt;/strong&gt;：&lt;/h4&gt;
&lt;p&gt;在查询中处理 NULL 值时，需要使用  &lt;code&gt;IS NULL&lt;/code&gt;  或  &lt;code&gt;IS NOT NULL&lt;/code&gt;  来检查某列是否为空。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Employees &lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; salary &lt;span class=&#34;keyword&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;这将返回所有  &lt;code&gt;salary&lt;/code&gt;  列中值为  &lt;code&gt;NULL&lt;/code&gt;  的员工。&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Employees &lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; salary &lt;span class=&#34;keyword&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;这将返回所有  &lt;code&gt;salary&lt;/code&gt;  列中值不为  &lt;code&gt;NULL&lt;/code&gt;  的员工。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-三值逻辑three-valued-logic-3vl&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-三值逻辑three-valued-logic-3vl&#34;&gt;#&lt;/a&gt; &lt;strong&gt;2. 三值逻辑（Three-Valued Logic, 3VL）&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;在 SQL 中，逻辑运算符（ &lt;code&gt;AND&lt;/code&gt; 、 &lt;code&gt;OR&lt;/code&gt; 、 &lt;code&gt;NOT&lt;/code&gt;  等）遵循三值逻辑。SQL 中的逻辑结果不仅有  &lt;code&gt;TRUE&lt;/code&gt;  和  &lt;code&gt;FALSE&lt;/code&gt; ，还有第三个可能的值  &lt;code&gt;UNKNOWN&lt;/code&gt; ，当表达式中涉及 NULL 时，结果可能是  &lt;code&gt;UNKNOWN&lt;/code&gt; 。&lt;/p&gt;
&lt;h4 id=&#34;三值逻辑表&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三值逻辑表&#34;&gt;#&lt;/a&gt; &lt;strong&gt;三值逻辑表&lt;/strong&gt;&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;表达式&lt;/th&gt;
&lt;th&gt;结果&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;TRUE AND TRUE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;TRUE AND FALSE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;TRUE AND NULL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;UNKNOWN&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FALSE AND FALSE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FALSE AND NULL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NULL AND NULL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;UNKNOWN&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;TRUE OR TRUE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;TRUE OR FALSE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;TRUE OR NULL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FALSE OR FALSE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FALSE OR NULL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;UNKNOWN&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NULL OR NULL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;UNKNOWN&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;三值逻辑在-sql-中的行为&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三值逻辑在-sql-中的行为&#34;&gt;#&lt;/a&gt; &lt;strong&gt;三值逻辑在 SQL 中的行为&lt;/strong&gt;：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;AND&lt;/code&gt;  运算符&lt;/strong&gt;：只要有一个操作数为  &lt;code&gt;FALSE&lt;/code&gt; ，结果就是  &lt;code&gt;FALSE&lt;/code&gt; 。如果有一个为  &lt;code&gt;NULL&lt;/code&gt; ，而另一个为  &lt;code&gt;TRUE&lt;/code&gt; ，结果是  &lt;code&gt;UNKNOWN&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;OR&lt;/code&gt;  运算符&lt;/strong&gt;：只要有一个操作数为  &lt;code&gt;TRUE&lt;/code&gt; ，结果就是  &lt;code&gt;TRUE&lt;/code&gt; 。如果有一个为  &lt;code&gt;NULL&lt;/code&gt; ，另一个为  &lt;code&gt;FALSE&lt;/code&gt; ，结果是  &lt;code&gt;UNKNOWN&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;NOT&lt;/code&gt;  运算符&lt;/strong&gt;：当对  &lt;code&gt;NULL&lt;/code&gt;  使用  &lt;code&gt;NOT&lt;/code&gt;  时，结果仍然是  &lt;code&gt;UNKNOWN&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;示例-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#示例-2&#34;&gt;#&lt;/a&gt; &lt;strong&gt;示例&lt;/strong&gt;：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;AND&lt;/code&gt;  运算示例&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Employees &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; salary &lt;span class=&#34;operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;50000&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;AND&lt;/span&gt; commission &lt;span class=&#34;keyword&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;在这种情况下，如果  &lt;code&gt;commission&lt;/code&gt;  列为 NULL 且  &lt;code&gt;salary &amp;gt; 50000&lt;/code&gt; ，则逻辑判断为  &lt;code&gt;TRUE AND UNKNOWN&lt;/code&gt; ，结果为  &lt;code&gt;UNKNOWN&lt;/code&gt; ，因此不会返回该行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;OR&lt;/code&gt;  运算示例&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Employees &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; salary &lt;span class=&#34;operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;50000&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;OR&lt;/span&gt; commission &lt;span class=&#34;keyword&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;如果  &lt;code&gt;salary &amp;gt; 50000&lt;/code&gt;  为  &lt;code&gt;TRUE&lt;/code&gt;  或  &lt;code&gt;commission&lt;/code&gt;  为  &lt;code&gt;NULL&lt;/code&gt; ，查询会返回符合条件的行，因为  &lt;code&gt;TRUE OR UNKNOWN&lt;/code&gt;  的结果是  &lt;code&gt;TRUE&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-聚合函数和-null&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-聚合函数和-null&#34;&gt;#&lt;/a&gt; &lt;strong&gt;3. 聚合函数和 NULL&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;在 SQL 中，聚合函数处理 NULL 值的方式各不相同：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;COUNT(column_name)&lt;/code&gt; &lt;/strong&gt;：只统计非 NULL 值的行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;COUNT(*)&lt;/code&gt; &lt;/strong&gt;：统计所有行，包括 NULL 值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;SUM()&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;AVG()&lt;/code&gt; &lt;/strong&gt;：忽略 NULL 值，仅对非 NULL 值进行计算。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;MAX()&lt;/code&gt; &lt;/strong&gt;、&lt;strong&gt; &lt;code&gt;MIN()&lt;/code&gt; &lt;/strong&gt;：同样忽略 NULL 值，只考虑非 NULL 的最大值或最小值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;示例-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#示例-3&#34;&gt;#&lt;/a&gt; 示例：&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;COUNT&lt;/span&gt;(&lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt;), &lt;span class=&#34;built_in&#34;&gt;COUNT&lt;/span&gt;(salary), &lt;span class=&#34;built_in&#34;&gt;AVG&lt;/span&gt;(salary)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Employees;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;COUNT(*)&lt;/code&gt; &lt;/strong&gt;：计算所有行的总数，包括  &lt;code&gt;salary&lt;/code&gt;  为 NULL 的行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;COUNT(salary)&lt;/code&gt; &lt;/strong&gt;：只计算  &lt;code&gt;salary&lt;/code&gt;  不为 NULL 的行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;AVG(salary)&lt;/code&gt; &lt;/strong&gt;：只计算  &lt;code&gt;salary&lt;/code&gt;  不为 NULL 的行，并求其平均值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-where-与-having-的-null-处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-where-与-having-的-null-处理&#34;&gt;#&lt;/a&gt; &lt;strong&gt;4. WHERE 与 HAVING 的 NULL 处理&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;在查询中处理 NULL 需要特别注意，尤其是  &lt;code&gt;WHERE&lt;/code&gt;  和  &lt;code&gt;HAVING&lt;/code&gt;  子句。SQL 中不能使用  &lt;code&gt;=&lt;/code&gt;  来比较 NULL，而必须使用  &lt;code&gt;IS NULL&lt;/code&gt;  或  &lt;code&gt;IS NOT NULL&lt;/code&gt; 。&lt;/p&gt;
&lt;h4 id=&#34;示例-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#示例-4&#34;&gt;#&lt;/a&gt; 示例：&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; department, &lt;span class=&#34;built_in&#34;&gt;AVG&lt;/span&gt;(salary)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Employees&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;BY&lt;/span&gt; department&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;HAVING&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;AVG&lt;/span&gt;(salary) &lt;span class=&#34;keyword&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这将只返回  &lt;code&gt;AVG(salary)&lt;/code&gt;  不为 NULL 的分组。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;总结-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结-4&#34;&gt;#&lt;/a&gt; &lt;strong&gt;总结&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;NULL&lt;/strong&gt; 是表示缺失或未知值的特殊标记，在 SQL 中不能使用普通的等式比较，需要使用  &lt;code&gt;IS NULL&lt;/code&gt;  和  &lt;code&gt;IS NOT NULL&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;三值逻辑（TRUE、FALSE、UNKNOWN）&lt;/strong&gt; 是 SQL 中的基本逻辑系统，主要用于处理涉及 NULL 值的逻辑运算。&lt;/li&gt;
&lt;li&gt;聚合函数会自动忽略 NULL 值（如  &lt;code&gt;SUM()&lt;/code&gt; 、 &lt;code&gt;AVG()&lt;/code&gt; ），但  &lt;code&gt;COUNT(*)&lt;/code&gt;  例外，它会包括所有行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;了解 NULL 值和三值逻辑对编写复杂的 SQL 查询至关重要，尤其是在处理可能包含缺失数据的数据库时。&lt;/p&gt;
</content>
        <category term="数据库" scheme="http://example.com/categories/database/" />
        <updated>2024-09-29T06:55:39.579Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/09/19/networks/network_lec_6/</id>
        <title>lecture_6Network Layer 3</title>
        <link rel="alternate" href="http://example.com/2024/09/19/networks/network_lec_6/"/>
        <content type="html">&lt;h1 id=&#34;链路状态ls和距离向量dv算法介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#链路状态ls和距离向量dv算法介绍&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label danger&#34;&gt;链路状态（LS）和距离向量（DV）算法介绍&lt;/span&gt;&lt;/h1&gt;
&lt;h2 id=&#34;1-链路状态算法link-state-ls&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-链路状态算法link-state-ls&#34;&gt;#&lt;/a&gt; 1. 链路状态算法（Link State, LS）&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;工作原理&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;全局视图&lt;/strong&gt;：每个路由器都会维护整个网络的拓扑结构，收集关于整个网络的链路状态信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;链路状态广播&lt;/strong&gt;：路由器向网络中的所有其他路由器发送链路状态包（LSA），每个路由器都会广播自己与邻居的连接情况，并包括这些连接的代价。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;拓扑图更新&lt;/strong&gt;：所有路由器根据接收到的链路状态信息构建整个网络的拓扑图。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Dijkstra 算法&lt;/strong&gt;：一旦所有路由器获得了网络的拓扑图，它们会使用 Dijkstra 算法来计算从自己到每个目的地的最短路径。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;优点&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;快速收敛&lt;/strong&gt;：LS 算法基于整个网络的拓扑信息进行计算，能够迅速做出决策。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;路径选择精准&lt;/strong&gt;：由于路由器了解整个网络的状态，它能够选择最佳路径，包括负载均衡等高级策略。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;计算复杂度高&lt;/strong&gt;：LS 算法的时间复杂度为 O (n^2) 或 O (n log n)，对于大型网络来说，计算和存储的开销较大。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;消息传递量大&lt;/strong&gt;：路由器需要定期向整个网络广播链路状态更新，因此在大规模网络中会产生较多的控制流量。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-距离向量算法distance-vector-dv&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-距离向量算法distance-vector-dv&#34;&gt;#&lt;/a&gt; 2. 距离向量算法（Distance Vector, DV）&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;工作原理&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;局部视图&lt;/strong&gt;：每个路由器只与邻居路由器交换路由信息，并且每个路由器只知道自己到邻居的距离。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;迭代更新&lt;/strong&gt;：每个路由器通过与邻居交换 “距离向量”（表示到每个目的地的距离）来逐步构建自己的路由表。路由器根据邻居的信息逐步更新自己的最优路径。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;贝尔曼 - 福特算法&lt;/strong&gt;：DV 算法依赖贝尔曼 - 福特算法进行路径选择，它通过多次迭代更新到各个目的地的最短距离。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;优点&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;简单&lt;/strong&gt;：DV 算法实现相对简单，路由器只需要与邻居交换信息，不需要维护整个网络的拓扑图。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;计算开销小&lt;/strong&gt;：由于只与邻居交换信息，计算和消息传递的开销较低。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;收敛较慢&lt;/strong&gt;：由于信息传播速度较慢，尤其在大网络中，收敛时间可能较长。出现网络故障时，DV 算法需要较长时间才能收敛到新的状态。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;计数到无穷大问题&lt;/strong&gt;：当网络中出现环路时，DV 算法可能陷入 “计数到无穷大” 的问题，即路由器不断增大其距离估计值，直到达到上限（通常为 16 跳）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-ls和dv的比较&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-ls和dv的比较&#34;&gt;#&lt;/a&gt; 3. LS 和 DV 的比较&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;消息复杂度&lt;/strong&gt;：LS 的消息复杂度为 O (nE)（n 为节点数，E 为边数），DV 的消息复杂度较低，因为它只在邻居之间交换消息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;收敛速度&lt;/strong&gt;：LS 算法收敛快，DV 算法由于逐步迭代，收敛时间可能较长。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;应用场景&lt;/strong&gt;：LS 算法适用于需要高精度、高可靠性的网络（如 OSPF 协议），DV 算法则适用于较小、简单的网络（如 RIP 协议）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总结来说，LS 算法适合对全网有更高掌控需求的大型网络，DV 算法则更适合小型或中型网络中简单的路径选择需求。&lt;/p&gt;
&lt;h1 id=&#34;分层路由hierarchical-routing&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分层路由hierarchical-routing&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label danger&#34;&gt;分层路由 (Hierarchical routing)&lt;/span&gt;&lt;/h1&gt;
&lt;h2 id=&#34;1as&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1as&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEuQVM=&#34;&gt;1.AS&lt;/span&gt; (autonomous systems)&lt;/h2&gt;
</content>
        <category term="计算机网络" scheme="http://example.com/categories/networks/" />
        <updated>2024-09-19T10:01:35.177Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/09/17/ue/hello-world/</id>
        <title>Hello World</title>
        <link rel="alternate" href="http://example.com/2024/09/17/ue/hello-world/"/>
        <content type="html">&lt;p&gt;Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvLw==&#34;&gt;Hexo&lt;/span&gt;! This is your very first post. Check &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv&#34;&gt;documentation&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=&#34;&gt;troubleshooting&lt;/span&gt; or you can ask me on &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==&#34;&gt;GitHub&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo new &lt;span class=&#34;string&#34;&gt;&amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s&#34;&gt;Writing&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=&#34;&gt;Server&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s&#34;&gt;Generating&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s&#34;&gt;Deployment&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I LOVE YOU&lt;/p&gt;
</content>
        <category term="ue" scheme="http://example.com/categories/ue/" />
        <updated>2024-09-17T04:09:35.616Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/09/17/temeplete/temeplete1/</id>
        <title>wwwww</title>
        <link rel="alternate" href="http://example.com/2024/09/17/temeplete/temeplete1/"/>
        <content type="html">&lt;p&gt;wwqswdsadwq&lt;/p&gt;
</content>
        <updated>2024-09-17T00:18:17.167Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/09/17/networks/hello-world/</id>
        <title>Hello World</title>
        <link rel="alternate" href="http://example.com/2024/09/17/networks/hello-world/"/>
        <content type="html">&lt;p&gt;Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvLw==&#34;&gt;Hexo&lt;/span&gt;! This is your very first post. Check &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv&#34;&gt;documentation&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=&#34;&gt;troubleshooting&lt;/span&gt; or you can ask me on &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==&#34;&gt;GitHub&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo new &lt;span class=&#34;string&#34;&gt;&amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s&#34;&gt;Writing&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=&#34;&gt;Server&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s&#34;&gt;Generating&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s&#34;&gt;Deployment&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I LOVE YOU&lt;/p&gt;
</content>
        <category term="计算机网络" scheme="http://example.com/categories/networks/" />
        <updated>2024-09-16T15:34:21.998Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/09/17/it-projectManage/hello-world/</id>
        <title>Hello World</title>
        <link rel="alternate" href="http://example.com/2024/09/17/it-projectManage/hello-world/"/>
        <content type="html">&lt;p&gt;Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvLw==&#34;&gt;Hexo&lt;/span&gt;! This is your very first post. Check &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv&#34;&gt;documentation&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=&#34;&gt;troubleshooting&lt;/span&gt; or you can ask me on &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==&#34;&gt;GitHub&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo new &lt;span class=&#34;string&#34;&gt;&amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s&#34;&gt;Writing&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=&#34;&gt;Server&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s&#34;&gt;Generating&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s&#34;&gt;Deployment&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I LOVE YOU&lt;/p&gt;
</content>
        <category term="IT项目管理" scheme="http://example.com/categories/it-projectManage/" />
        <updated>2024-09-16T14:15:39.413Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/09/16/database/learn-test/</id>
        <title>introduction</title>
        <link rel="alternate" href="http://example.com/2024/09/16/database/learn-test/"/>
        <content type="html">&lt;h1 id=&#34;简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介&#34;&gt;#&lt;/a&gt; 简介&lt;/h1&gt;
&lt;p&gt;此分类主要整理了悉尼大学 9120 数据库的知识，内容包含 E-R 图，RM 图，以及 postgresql 的内容。&lt;/p&gt;
</content>
        <category term="数据库" scheme="http://example.com/categories/database/" />
        <updated>2024-09-16T13:03:36.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/09/16/database/lec_4%20%E5%85%B3%E7%B3%BB%E4%BB%A3%E6%95%B0%E4%B8%8Esql/</id>
        <title>lec_4 关系代数与sql</title>
        <link rel="alternate" href="http://example.com/2024/09/16/database/lec_4%20%E5%85%B3%E7%B3%BB%E4%BB%A3%E6%95%B0%E4%B8%8Esql/"/>
        <content type="html">&lt;h1 id=&#34;关系代数与sql&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关系代数与sql&#34;&gt;#&lt;/a&gt; 关系代数与 sql&lt;/h1&gt;
&lt;h2 id=&#34;关系代数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关系代数&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label danger&#34;&gt;关系代数&lt;/span&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;关系代数简介&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;关系代数（Relational Algebra, RA）&lt;/strong&gt; 是针对关系模型的操作语言。&lt;/li&gt;
&lt;li&gt;关系代数由一组操作符组成，可以对关系（表）执行操作，描述如何一步一步计算出所需结果。&lt;/li&gt;
&lt;li&gt;关系代数是命令式的，描述了查询的过程，而不是结果的约束。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;关系代数基本操作符&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;选择 (Selection, σ)&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择操作从一个关系（表）中挑选出符合某个条件的元组（行）。&lt;/li&gt;
&lt;li&gt;形式：σ_condition (R)&lt;/li&gt;
&lt;li&gt;示例：σ_country=&#39;AUS&#39;(Student) 会返回所有国家为 “澳大利亚” 的学生。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;投影 (Projection, π)&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;投影操作从一个关系中选择特定的属性（列），并删除重复的元组。&lt;/li&gt;
&lt;li&gt;形式：π_attributes (R)&lt;/li&gt;
&lt;li&gt;示例：π_name, country (Student) 返回学生表中的姓名和国家列，去除重复值。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;笛卡尔积 (Cross Product, ×)&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;笛卡尔积操作将两个关系的所有元组进行组合，形成新的关系，结果的每一行都是两个关系中元组的所有可能组合。比如学生表有 2 条数据，老师表有 3 条数据，组成的新表就有 6 条数据。&lt;/li&gt;
&lt;li&gt;形式：R × S&lt;/li&gt;
&lt;li&gt;示例：Student × Enrolled 将两个表中的每一个元组组合在一起。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;联合 (Union, ∪)&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;联合操作返回两个关系中的所有元组，自动去除重复的行。&lt;/li&gt;
&lt;li&gt;形式：R ∪ S&lt;/li&gt;
&lt;li&gt;示例：π_sid (Student) ∪ π_sid (Enrolled) 返回在学生和选课表中出现的所有学生 ID。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;交集 (Intersection, ∩)&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;交集操作返回在两个关系中都存在的元组。&lt;/li&gt;
&lt;li&gt;形式：R ∩ S&lt;/li&gt;
&lt;li&gt;示例：π_sid (Student) ∩ π_sid (Enrolled) 返回同时出现在学生表和选课表中的学生 ID。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;差集 (Difference, −)&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;差集操作返回在第一个关系中存在但在第二个关系中不存在的元组。&lt;/li&gt;
&lt;li&gt;形式：R − S&lt;/li&gt;
&lt;li&gt;示例：π_sid (Student) − π_sid (Enrolled) 返回只在学生表中存在而没有选课的学生 ID。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;连接操作&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;连接操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#连接操作&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label danger&#34;&gt;连接操作&lt;/span&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;条件连接 (Theta Join, ⋈ₛ)&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：条件连接是基于给定的条件，将两个关系的笛卡尔积中的行进行筛选。该条件可以是任意的布尔表达式（例如  &lt;code&gt;=&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;&lt;/code&gt;  等比较操作符）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;形式&lt;/strong&gt;： &lt;code&gt;R ⋈ₛ S&lt;/code&gt; ，其中  &lt;code&gt;ₛ&lt;/code&gt;  是连接条件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：假设有两个表  &lt;code&gt;Student&lt;/code&gt;  和  &lt;code&gt;Enrolled&lt;/code&gt; ，我们希望查找学生和他们所选的课程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表  &lt;code&gt;Student&lt;/code&gt; :&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;sid&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;country&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1001&lt;/td&gt;
&lt;td&gt;lan&lt;/td&gt;
&lt;td&gt;AUS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1002&lt;/td&gt;
&lt;td&gt;Ha&lt;/td&gt;
&lt;td&gt;ROK&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre&gt;&lt;code&gt;- 表 `Enrolled`:
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;sid&lt;/th&gt;
&lt;th&gt;uos_code&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1001&lt;/td&gt;
&lt;td&gt;COMP5318&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1002&lt;/td&gt;
&lt;td&gt;COMP5318&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre&gt;&lt;code&gt;查询学生与他们所选课程，可以使用 `sid` 作为连接条件：

- `Student ⋈_&amp;#123;Student.sid = Enrolled.sid&amp;#125; Enrolled`:
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;sid&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;country&lt;/th&gt;
&lt;th&gt;uos_code&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1001&lt;/td&gt;
&lt;td&gt;lan&lt;/td&gt;
&lt;td&gt;AUS&lt;/td&gt;
&lt;td&gt;COMP5318&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1002&lt;/td&gt;
&lt;td&gt;Ha&lt;/td&gt;
&lt;td&gt;ROK&lt;/td&gt;
&lt;td&gt;COMP5318&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;通过这个操作，我们得到了两个表中  &lt;code&gt;sid&lt;/code&gt;  匹配的行。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;自然连接 (Natural Join, ⋈)&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：自然连接是一种特殊的等值连接，它自动基于两个关系中&lt;strong&gt;具有相同名称&lt;/strong&gt;且&lt;strong&gt;值相等&lt;/strong&gt;的属性进行连接，且在结果中只保留一个重复的属性列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;形式&lt;/strong&gt;： &lt;code&gt;R ⋈ S&lt;/code&gt; ，连接条件是所有同名属性相等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：考虑前面的  &lt;code&gt;Student&lt;/code&gt;  和  &lt;code&gt;Enrolled&lt;/code&gt;  表，假设我们要进行自然连接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Student ⋈ Enrolled&lt;/code&gt; :&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;sid&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;country&lt;/th&gt;
&lt;th&gt;uos_code&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1001&lt;/td&gt;
&lt;td&gt;lan&lt;/td&gt;
&lt;td&gt;AUS&lt;/td&gt;
&lt;td&gt;COMP5318&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1002&lt;/td&gt;
&lt;td&gt;Ha&lt;/td&gt;
&lt;td&gt;ROK&lt;/td&gt;
&lt;td&gt;COMP5318&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;在自然连接中， &lt;code&gt;sid&lt;/code&gt;  是两个表中共有的属性，连接后只保留一列  &lt;code&gt;sid&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;等值连接 (Equi-Join)&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义&lt;/strong&gt;：等值连接是条件连接的一种特例，连接条件只包含相等比较（ &lt;code&gt;=&lt;/code&gt; ）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;形式&lt;/strong&gt;： &lt;code&gt;R ⋈_&amp;#123;A = B&amp;#125; S&lt;/code&gt; ，其中  &lt;code&gt;A&lt;/code&gt;  和  &lt;code&gt;B&lt;/code&gt;  是两个表中的属性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;与自然连接的区别&lt;/strong&gt;：等值连接会保留连接条件中的重复属性，而自然连接则去掉重复列。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;： &lt;code&gt;Student ⋈_&amp;#123;Student.sid = Enrolled.sid&amp;#125; Enrolled&lt;/code&gt; ，结果中会保留两个  &lt;code&gt;sid&lt;/code&gt;  列。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;&lt;strong&gt;外连接 (Outer Join)&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;外连接允许在结果中包含没有匹配行的元组，并填充相应部分为  &lt;code&gt;NULL&lt;/code&gt; 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;左外连接 (Left Outer Join)&lt;/strong&gt;：返回左表中的所有元组，即使右表中没有匹配的行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;形式&lt;/strong&gt;： &lt;code&gt;R LEFT OUTER JOIN S&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;： &lt;code&gt;Student LEFT OUTER JOIN Enrolled&lt;/code&gt;  会返回学生表中的所有行，即使有些学生没有选课，未匹配的部分用  &lt;code&gt;NULL&lt;/code&gt;  填充：&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;sid&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;country&lt;/th&gt;
&lt;th&gt;uos_code&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1001&lt;/td&gt;
&lt;td&gt;lan&lt;/td&gt;
&lt;td&gt;AUS&lt;/td&gt;
&lt;td&gt;COMP5318&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1002&lt;/td&gt;
&lt;td&gt;HA&lt;/td&gt;
&lt;td&gt;ROK&lt;/td&gt;
&lt;td&gt;COMP5318&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1003&lt;/td&gt;
&lt;td&gt;Grant&lt;/td&gt;
&lt;td&gt;AUS&lt;/td&gt;
&lt;td&gt;NULL&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;右外连接 (Right Outer Join)&lt;/strong&gt;：返回右表中的所有元组，即使左表中没有匹配的行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;形式&lt;/strong&gt;： &lt;code&gt;R RIGHT OUTER JOIN S&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;全外连接 (Full Outer Join)&lt;/strong&gt;：返回两个表中的所有元组，包括没有匹配的行，并将未匹配的部分用  &lt;code&gt;NULL&lt;/code&gt;  填充。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;形式&lt;/strong&gt;： &lt;code&gt;R FULL OUTER JOIN S&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sql简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sql简介&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;label danger&#34;&gt;SQL 简介&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;在 SQL 中，集合操作用于对两个查询结果集进行运算，类似于关系代数中的集合运算。常见的 SQL 集合操作包括  &lt;code&gt;UNION&lt;/code&gt; 、 &lt;code&gt;INTERSECT&lt;/code&gt;  和  &lt;code&gt;EXCEPT&lt;/code&gt; 。这些操作用于合并、比较两个查询的结果集，并遵循集合的基本规则，如去除重复数据。每个操作都需要两个结果集具有&lt;strong&gt;相同数量的列&lt;/strong&gt;，且相应列的数据类型必须兼容。&lt;/p&gt;
&lt;h3 id=&#34;1-union并集&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-union并集&#34;&gt;#&lt;/a&gt; 1. &lt;strong&gt;UNION&lt;/strong&gt;（并集）&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;UNION&lt;/code&gt;  操作返回两个查询结果的并集，也就是说，它会包含两个结果集中所有的行，且自动去除重复的行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;语法&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; 列&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, 列&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; 表&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;UNION&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; 列&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, 列&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; 表&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Students&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;UNION&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Teachers;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;该查询将返回  &lt;code&gt;Students&lt;/code&gt;  表和  &lt;code&gt;Teachers&lt;/code&gt;  表中的所有不同的名字（去重）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;特点&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自动去除重复行。&lt;/li&gt;
&lt;li&gt;可以使用  &lt;code&gt;UNION ALL&lt;/code&gt;  来保留重复行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Students&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;ALL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Teachers;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;UNION ALL&lt;/code&gt;  将返回所有行，包括重复的行。&lt;/p&gt;
&lt;h3 id=&#34;2-intersect交集&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-intersect交集&#34;&gt;#&lt;/a&gt; 2. **INTERSECT（** 交集）&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;INTERSECT&lt;/code&gt;  操作返回两个查询结果的交集，即只返回在两个查询结果中都存在的行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;语法&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; 列&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, 列&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; 表&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;INTERSECT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; 列&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, 列&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; 表&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;示例&lt;br&gt;
 &lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Students&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;INTERSECT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Teachers;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;该查询将返回既是  &lt;code&gt;Students&lt;/code&gt;  表又是  &lt;code&gt;Teachers&lt;/code&gt;  表中的名字（即两个表中都存在的名字）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;特点&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只返回两个结果集中都出现的行。&lt;/li&gt;
&lt;li&gt;自动去除重复行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-except差集&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-except差集&#34;&gt;#&lt;/a&gt; 3. &lt;strong&gt;EXCEPT&lt;/strong&gt;（差集）&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;EXCEPT&lt;/code&gt;  操作返回在第一个查询结果中存在但在第二个查询结果中不存在的行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;语法&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; 列&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, 列&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; 表&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;EXCEPT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; 列&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, 列&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; 表&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;示例&lt;br&gt;
 &lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Students&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;EXCEPT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; name &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; Teachers;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;该查询将返回所有只存在于  &lt;code&gt;Students&lt;/code&gt;  表中但不在  &lt;code&gt;Teachers&lt;/code&gt;  表中的名字。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;特点&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;返回只出现在第一个结果集中的行。&lt;/li&gt;
&lt;li&gt;自动去除重复行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-union-intersect-和-except-的规则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-union-intersect-和-except-的规则&#34;&gt;#&lt;/a&gt; 4. &lt;strong&gt;UNION、INTERSECT 和 EXCEPT 的规则&lt;/strong&gt;：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;列数必须相同&lt;/strong&gt;：在两个查询中， &lt;code&gt;SELECT&lt;/code&gt;  子句中的列数量必须一致。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据类型必须兼容&lt;/strong&gt;：相应列的数据类型必须相同或兼容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;去除重复行&lt;/strong&gt;：默认情况下， &lt;code&gt;UNION&lt;/code&gt; 、 &lt;code&gt;INTERSECT&lt;/code&gt;  和  &lt;code&gt;EXCEPT&lt;/code&gt;  都会去除重复的行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用 ALL 保留重复行&lt;/strong&gt;：如果希望保留重复行，可以使用  &lt;code&gt;UNION ALL&lt;/code&gt; ，但  &lt;code&gt;INTERSECT ALL&lt;/code&gt;  和  &lt;code&gt;EXCEPT ALL&lt;/code&gt;  在部分 SQL 实现中并不支持。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;UNION&lt;/code&gt; &lt;/strong&gt; 返回两个查询结果集的并集，去除重复行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;INTERSECT&lt;/code&gt; &lt;/strong&gt; 返回两个查询结果集的交集，即共同存在的行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;EXCEPT&lt;/code&gt; &lt;/strong&gt; 返回第一个结果集中有但第二个结果集中没有的行。&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="数据库" scheme="http://example.com/categories/database/" />
        <updated>2024-09-16T13:03:36.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/09/16/database/lec_5%20%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BA%A6%E6%9D%9F/</id>
        <title>lec_5 数据库约束</title>
        <link rel="alternate" href="http://example.com/2024/09/16/database/lec_5%20%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BA%A6%E6%9D%9F/"/>
        <content type="html">&lt;h1 id=&#34;数据库约束database-constriants&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库约束database-constriants&#34;&gt;#&lt;/a&gt; 数据库约束（Database constriants）&lt;/h1&gt;
&lt;h2 id=&#34;完整性约束-intergral-constraint&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#完整性约束-intergral-constraint&#34;&gt;#&lt;/a&gt; 完整性约束 (Intergral constraint)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;概要&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;完整性约束指定：完整性约束是在数据库架构设计（schema design）过程中被定义的。数据库设计者负责确保定义的完整性约束之间不会互相冲突。&lt;/li&gt;
&lt;li&gt;⾃动化检测：虽然检测完整性约束的过程可以⾃动化，但这可能会引⼊不可接受的性能开销。&lt;/li&gt;
&lt;li&gt;完整性约束检查：完整性约束在数据库被修改时进⾏检查。可以指定检查完整性约束的时机，⽐如在⼀个 SQL 语句执⾏后或⼀个事务（transaction）结束时。
&lt;ul&gt;
&lt;li&gt;事务：⼀个事务是⼀组 SQL 语句，它们作为⼀个单⼀的、不可分割的操作执⾏，这个概念也被称为原⼦性（atomicity）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;违反完整性约束的反应：幻灯⽚还提到了如果违反了完整性约束，可以采取的⼏种响应措施：
&lt;ol&gt;
&lt;li&gt;拒绝数据库操作：不执⾏违反完整性约束的操作。&lt;/li&gt;
&lt;li&gt;中⽌整个事务：如果事务中的任何部分违反了完整性约束，就回滚（rollback）事务中的所有操作。&lt;/li&gt;
&lt;li&gt;执⾏ “维护” 操作：如果完整性约束被违反，执⾏必要的操作以恢复数据库到合法状态。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;事务transaction&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事务transaction&#34;&gt;#&lt;/a&gt; 事务（Transaction）&lt;/h2&gt;
&lt;h3 id=&#34;事务的关键特性-acid&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事务的关键特性-acid&#34;&gt;#&lt;/a&gt; 事务的关键特性 (ACID)：&lt;/h3&gt;
&lt;p&gt;ACID 是事务的四个关键属性，分别是&lt;strong&gt;原子性 (Atomicity)&lt;/strong&gt;、&lt;strong&gt;一致性 (Consistency)&lt;/strong&gt;、&lt;strong&gt;隔离性 (Isolation)&lt;/strong&gt; 和&lt;strong&gt;持久性 (Durability)&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;1-原子性-atomicity&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-原子性-atomicity&#34;&gt;#&lt;/a&gt; 1. &lt;strong&gt;原子性 (Atomicity)&lt;/strong&gt;：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义&lt;/strong&gt;：事务中的所有操作要么全部执行成功，要么全部失败回滚。事务不能部分执行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：假设你进行一个银行转账操作，转账事务包含两个步骤：从账户 A 扣钱，从账户 B 加钱。原子性确保如果其中一个步骤失败，整个转账操作会被回滚，避免账户 A 扣钱但账户 B 没有加钱的情况。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-一致性-consistency&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-一致性-consistency&#34;&gt;#&lt;/a&gt; 2. &lt;strong&gt;一致性 (Consistency)&lt;/strong&gt;：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义&lt;/strong&gt;：事务执行前后，数据库必须保持一致性状态，确保数据库从一个合法的状态转换到另一个合法的状态。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：在银行转账的例子中，一致性确保无论事务成功或失败，账户 A 和账户 B 的总金额不会因为转账事务而改变。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-隔离性-isolation&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-隔离性-isolation&#34;&gt;#&lt;/a&gt; 3. &lt;strong&gt;隔离性 (Isolation)&lt;/strong&gt;：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义&lt;/strong&gt;：多个事务同时执行时，一个事务的中间状态对其他事务是不可见的。隔离性保证并发事务之间互不干扰，避免数据不一致。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：如果两个用户同时从一个账户中取钱，隔离性保证每个用户在取钱时不会看到对方的操作结果，以避免超取。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SQL 中有四种常见的事务隔离级别，分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Read Uncommitted&lt;/strong&gt;：允许读取其他未提交事务的数据，可能导致脏读（Dirty Read）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Read Committed&lt;/strong&gt;：只能读取其他事务已提交的数据，避免脏读。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Repeatable Read&lt;/strong&gt;：确保同一个事务在读取数据时，数据在整个事务过程中不会被修改，避免不可重复读。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Serializable&lt;/strong&gt;：事务被严格隔离，避免所有并发事务问题，通常开销较大。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4-持久性-durability&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-持久性-durability&#34;&gt;#&lt;/a&gt; 4. &lt;strong&gt;持久性 (Durability)&lt;/strong&gt;：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义&lt;/strong&gt;：一旦事务提交成功，其对数据库的修改就是永久性的，系统即使发生崩溃，也不会丢失已提交的事务结果。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：在银行转账完成并提交后，即使服务器崩溃，转账的记录仍然会保存在数据库中，不会丢失。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;事务的生命周期&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事务的生命周期&#34;&gt;#&lt;/a&gt; 事务的生命周期：&lt;/h3&gt;
&lt;p&gt;事务通常包括以下几个阶段：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;开始 (Begin)&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过  &lt;code&gt;BEGIN&lt;/code&gt;  语句显式开始一个事务。&lt;/li&gt;
&lt;li&gt;也可以隐式开始（比如直接执行  &lt;code&gt;INSERT&lt;/code&gt;  等操作）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;执行操作 (Perform Operations)&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;事务包含一组操作，如插入、更新、删除等 SQL 语句。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;提交 (Commit)&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;COMMIT&lt;/code&gt;  语句将事务的所有操作永久写入数据库。&lt;/li&gt;
&lt;li&gt;一旦提交，事务的更改就无法回滚。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;回滚 (Rollback)&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果事务中的某个操作失败，或者用户手动调用  &lt;code&gt;ROLLBACK&lt;/code&gt; ，事务将被回滚，所有对数据库的修改将被撤销。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;示例：一个简单的事务&lt;br&gt;
以下是一个 SQL 中事务的基本示例，涉及对数据库的修改和回滚：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;BEGIN&lt;/span&gt;;  &lt;span class=&#34;comment&#34;&gt;-- 开始事务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 插入一条记录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;INTO&lt;/span&gt; accounts (account_id, balance) &lt;span class=&#34;keyword&#34;&gt;VALUES&lt;/span&gt; (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 更新账户余额&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;UPDATE&lt;/span&gt; accounts &lt;span class=&#34;keyword&#34;&gt;SET&lt;/span&gt; balance &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; balance &lt;span class=&#34;operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; account_id &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 提交事务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;COMMIT&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在这个事务中，我们首先插入一个新账户，并将账户余额减少了 200。如果在任何步骤中发生错误（如账户不存在或余额不足），我们可以使用  &lt;code&gt;ROLLBACK&lt;/code&gt;  撤销事务的所有操作。&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;BEGIN&lt;/span&gt;;  &lt;span class=&#34;comment&#34;&gt;-- 开始事务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 执行一些操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;INTO&lt;/span&gt; accounts (account_id, balance) &lt;span class=&#34;keyword&#34;&gt;VALUES&lt;/span&gt; (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;UPDATE&lt;/span&gt; accounts &lt;span class=&#34;keyword&#34;&gt;SET&lt;/span&gt; balance &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; balance &lt;span class=&#34;operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; account_id &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 如果某个操作失败，则回滚事务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;ROLLBACK&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;常见的事务问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见的事务问题&#34;&gt;#&lt;/a&gt; 常见的事务问题：&lt;/h3&gt;
&lt;p&gt;由于事务在并发情况下会相互影响，以下是一些常见的并发问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;脏读 (Dirty Read)&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个事务读取了另一个尚未提交的事务修改的数据，可能会导致数据不一致。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;不可重复读 (Non-repeatable Read)&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个事务在多次读取同一数据时，数据可能已经被另一个事务修改，导致读取到不同的结果。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;幻读 (Phantom Read)&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个事务在多次查询时，发现另一个事务插入了新数据，导致每次查询的结果集不同。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过设置适当的隔离级别，可以避免这些并发问题。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;断言assertions&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#断言assertions&#34;&gt;#&lt;/a&gt; 断言 (assertions)&lt;/h2&gt;
&lt;p&gt;Assertion 是一种谓词，表示数据库中的某个条件必须始终为真。它们用于确保某些业务规则始终在数据库中得到遵守。例如，假设我们有一条规则：“每个分支的贷款总额必须小于该分支的账户余额总和”。这种规则涉及多个表的约束，无法通过单一表的约束（如  &lt;code&gt;CHECK&lt;/code&gt;  或  &lt;code&gt;FOREIGN KEY&lt;/code&gt; ）来表达，因此需要使用  &lt;code&gt;ASSERTION&lt;/code&gt;  。&lt;br&gt;
创建 assertion&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;CREATE&lt;/span&gt; ASSERTION assertion_name &lt;span class=&#34;keyword&#34;&gt;CHECK&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;condition&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
 其中， &lt;code&gt;assertion_name&lt;/code&gt;  是 Assertion 的名称， &lt;code&gt;condition&lt;/code&gt;  是希望数据库始终满足的条件。每当数据库的状态发生改变时，数据库管理系统（DBMS）会检查该 Assertion 是否仍然成立 。&lt;/p&gt;
&lt;p&gt;例子 1 为了确保每个分支的贷款总额小于该分支的账户余额总和&lt;br&gt;
 &lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 该 Assertion 确保在任意分支中，不会出现贷款总额大于或等于账户余额总和的情况 。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;CREATE&lt;/span&gt; ASSERTION sum_constraint &lt;span class=&#34;keyword&#34;&gt;CHECK&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;EXISTS&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; branch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;SUM&lt;/span&gt;(amount) &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; loan &lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; loan.branch_name &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; branch.branch_name&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ) &lt;span class=&#34;operator&#34;&gt;&amp;gt;=&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;SUM&lt;/span&gt;(amount) &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; account &lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; account.branch_name &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; branch.branch_name&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;例子2-如果我们希望确保每个贷款都有至少一个借款人并且该借款人拥有余额不少于-1000-美元的账户可以创建以下-assertion-code4-&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例子2-如果我们希望确保每个贷款都有至少一个借款人并且该借款人拥有余额不少于-1000-美元的账户可以创建以下-assertion-code4-&#34;&gt;#&lt;/a&gt; 例子 2 如果我们希望确保每个贷款都有至少一个借款人，并且该借款人拥有余额不少于 1000 美元的账户，可以创建以下 Assertion：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 该 Assertion 确保每笔贷款都满足至少有一个借款人拥有余额不少于 1000 美元的账户 。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;CREATE&lt;/span&gt; ASSERTION balance_constraint &lt;span class=&#34;keyword&#34;&gt;CHECK&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;EXISTS&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; loan&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;EXISTS&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; borrower &lt;span class=&#34;keyword&#34;&gt;JOIN&lt;/span&gt; depositor &lt;span class=&#34;keyword&#34;&gt;ON&lt;/span&gt; borrower.customer_name &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; depositor.customer_name&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;JOIN&lt;/span&gt; account &lt;span class=&#34;keyword&#34;&gt;ON&lt;/span&gt; depositor.account_number &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; account.account_number&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; loan.loan_number &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; borrower.loan_number&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;AND&lt;/span&gt; account.balance &lt;span class=&#34;operator&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/h2&gt;
&lt;h2 id=&#34;静态完整性约束-static-integrity-constraints&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#静态完整性约束-static-integrity-constraints&#34;&gt;#&lt;/a&gt; 静态完整性约束 (Static Integrity Constraints)&lt;/h2&gt;
&lt;p&gt;静态完整性约束是指对数据库在某一时刻的状态进行限制，确保每个时刻的数据都是合法的、符合规则的。它们定义了每个合法的数据库状态必须满足的条件。如果数据库状态违反了这些约束，则被视为非法操作。以下是主要的静态完整性约束类型。&lt;/p&gt;
&lt;h3 id=&#34;1-域约束-domain-constraints&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-域约束-domain-constraints&#34;&gt;#&lt;/a&gt; 1. 域约束 (Domain Constraints)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;域约束&lt;/strong&gt;确保每个列的值符合预定义的数据类型和范围。例如，一个人的年龄应该是正整数，不能为负值或超出合理范围。&lt;/p&gt;
&lt;p&gt;示例：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TABLE&lt;/span&gt; Student (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    student_id &lt;span class=&#34;type&#34;&gt;INTEGER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    name &lt;span class=&#34;type&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    age &lt;span class=&#34;type&#34;&gt;INTEGER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;CHECK&lt;/span&gt; (age &lt;span class=&#34;operator&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在此表中， &lt;code&gt;age&lt;/code&gt;  列通过  &lt;code&gt;CHECK&lt;/code&gt;  约束，确保所有插入的值都必须为非负整数。&lt;/p&gt;
&lt;h3 id=&#34;2-键约束-key-constraints&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-键约束-key-constraints&#34;&gt;#&lt;/a&gt; 2. 键约束 (Key Constraints)&lt;/h3&gt;
&lt;p&gt;键约束确保数据库中某些列的值在表内是唯一的，用来唯一标识记录。主要包括以下几种：&lt;/p&gt;
&lt;h4 id=&#34;21-主键约束-primary-key-constraint&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21-主键约束-primary-key-constraint&#34;&gt;#&lt;/a&gt; 2.1 主键约束 (Primary Key Constraint)&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;主键 (Primary Key)&lt;/strong&gt; 是数据库中用于唯一标识表中每一行的列（或列的组合）。主键的值不能重复，也不能为空 ( &lt;code&gt;NULL&lt;/code&gt; )。&lt;/p&gt;
&lt;p&gt;示例：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TABLE&lt;/span&gt; Student (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    student_id &lt;span class=&#34;type&#34;&gt;INTEGER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;PRIMARY&lt;/span&gt; KEY,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    name &lt;span class=&#34;type&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    age &lt;span class=&#34;type&#34;&gt;INTEGER&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在此示例中， &lt;code&gt;student_id&lt;/code&gt;  是主键，保证每个学生都有唯一的  &lt;code&gt;student_id&lt;/code&gt; 。&lt;/p&gt;
&lt;h4 id=&#34;22-唯一约束-unique-constraint&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-唯一约束-unique-constraint&#34;&gt;#&lt;/a&gt; 2.2 唯一约束 (Unique Constraint)&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;唯一约束 (Unique)&lt;/strong&gt; 确保列中的所有值都是唯一的，但允许  &lt;code&gt;NULL&lt;/code&gt;  值。与主键不同，一个表可以有多个唯一约束。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TABLE&lt;/span&gt; Student (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    student_id &lt;span class=&#34;type&#34;&gt;INTEGER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;PRIMARY&lt;/span&gt; KEY,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    email &lt;span class=&#34;type&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;UNIQUE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;此示例中， &lt;code&gt;email&lt;/code&gt;  列上的唯一约束确保每个学生的电子邮件地址都是唯一的。&lt;/p&gt;
&lt;h3 id=&#34;3-外键约束-foreign-key-constraints&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-外键约束-foreign-key-constraints&#34;&gt;#&lt;/a&gt; 3. 外键约束 (Foreign Key Constraints)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;外键约束 (Foreign Key)&lt;/strong&gt; 用于确保两个表之间的参照完整性。它保证一个表中的值必须在另一个表中存在。&lt;/p&gt;
&lt;p&gt;示例：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TABLE&lt;/span&gt; Student (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    student_id &lt;span class=&#34;type&#34;&gt;INTEGER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;PRIMARY&lt;/span&gt; KEY,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    name &lt;span class=&#34;type&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TABLE&lt;/span&gt; Enrollment (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    enrollment_id &lt;span class=&#34;type&#34;&gt;INTEGER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;PRIMARY&lt;/span&gt; KEY,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    student_id &lt;span class=&#34;type&#34;&gt;INTEGER&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;FOREIGN&lt;/span&gt; KEY (student_id) &lt;span class=&#34;keyword&#34;&gt;REFERENCES&lt;/span&gt; Student(student_id)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
 在此示例中， &lt;code&gt;Enrollment&lt;/code&gt;  表中的  &lt;code&gt;student_id&lt;/code&gt;  是一个外键，引用  &lt;code&gt;Student&lt;/code&gt;  表中的  &lt;code&gt;student_id&lt;/code&gt; 。这确保了每个注册记录中的  &lt;code&gt;student_id&lt;/code&gt;  都必须存在于  &lt;code&gt;Student&lt;/code&gt;  表中。&lt;/p&gt;
&lt;h3 id=&#34;4-检查约束-check-constraints&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-检查约束-check-constraints&#34;&gt;#&lt;/a&gt; 4. 检查约束 (Check Constraints)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;检查约束 (Check)&lt;/strong&gt; 用于指定列的值必须满足的条件。它们提供了一种强制执行复杂条件的机制。&lt;/p&gt;
&lt;p&gt;示例：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TABLE&lt;/span&gt; Student (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    student_id &lt;span class=&#34;type&#34;&gt;INTEGER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;PRIMARY&lt;/span&gt; KEY,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    name &lt;span class=&#34;type&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    age &lt;span class=&#34;type&#34;&gt;INTEGER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;CHECK&lt;/span&gt; (age &lt;span class=&#34;operator&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;此示例中， &lt;code&gt;age&lt;/code&gt;  列的值必须大于等于 18，确保插入的学生必须年满 18 岁。&lt;/p&gt;
&lt;h3 id=&#34;5-语义约束-semantic-integrity-constraints&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-语义约束-semantic-integrity-constraints&#34;&gt;#&lt;/a&gt; 5. 语义约束 (Semantic Integrity Constraints)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;语义约束 (Semantic Constraints)&lt;/strong&gt; 是对数据逻辑含义的约束，确保数据的有效性和一致性。它们通常涉及特定领域的业务逻辑规则。&lt;/p&gt;
&lt;p&gt;示例：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TABLE&lt;/span&gt; Employee (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    emp_id &lt;span class=&#34;type&#34;&gt;INTEGER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;PRIMARY&lt;/span&gt; KEY,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    name &lt;span class=&#34;type&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    hire_date &lt;span class=&#34;type&#34;&gt;DATE&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    birth_date &lt;span class=&#34;type&#34;&gt;DATE&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;CHECK&lt;/span&gt; (hire_date &lt;span class=&#34;operator&#34;&gt;&amp;gt;&lt;/span&gt; birth_date)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在这个例子中， &lt;code&gt;hire_date&lt;/code&gt;  必须晚于  &lt;code&gt;birth_date&lt;/code&gt; ，确保员工的入职日期必须在他们的出生日期之后。&lt;/p&gt;
&lt;h3 id=&#34;6为已经创建好的表添加约束&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6为已经创建好的表添加约束&#34;&gt;#&lt;/a&gt; 6. 为已经创建好的表添加约束&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 添加约束&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TABLE&lt;/span&gt; 表名 &lt;span class=&#34;keyword&#34;&gt;ADD&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;CONSTRAINT&lt;/span&gt; 约束名 类型 (列名);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 删除约束&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TABLE&lt;/span&gt; 表名 &lt;span class=&#34;keyword&#34;&gt;DROP&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;CONSTRAINT&lt;/span&gt; 约束名;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 添加主键&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TABLE&lt;/span&gt; 表名 &lt;span class=&#34;keyword&#34;&gt;ADD&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;CONSTRAINT&lt;/span&gt; 约束名 &lt;span class=&#34;keyword&#34;&gt;PRIMARY&lt;/span&gt; KEY (列名);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 添加外键&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TABLE&lt;/span&gt; 表名 &lt;span class=&#34;keyword&#34;&gt;ADD&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;CONSTRAINT&lt;/span&gt; 约束名 &lt;span class=&#34;keyword&#34;&gt;FOREIGN&lt;/span&gt; KEY (列名) &lt;span class=&#34;keyword&#34;&gt;REFERENCES&lt;/span&gt; 参考表 (参考列);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 添加唯一（unique)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TABLE&lt;/span&gt; 表名 &lt;span class=&#34;keyword&#34;&gt;ADD&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;CONSTRAINT&lt;/span&gt; 约束名 &lt;span class=&#34;keyword&#34;&gt;UNIQUE&lt;/span&gt; (列名);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 命名约束&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TABLE&lt;/span&gt; Students &lt;span class=&#34;keyword&#34;&gt;ADD&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;CONSTRAINT&lt;/span&gt; unique_email &lt;span class=&#34;keyword&#34;&gt;UNIQUE&lt;/span&gt; (email);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 删除已经命名的约束&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TABLE&lt;/span&gt; Students &lt;span class=&#34;keyword&#34;&gt;DROP&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;CONSTRAINT&lt;/span&gt; unique_email;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 举例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TABLE&lt;/span&gt; Lecture &lt;span class=&#34;keyword&#34;&gt;ADD&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;CONSTRAINT&lt;/span&gt; ClassroomConflict &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;UNIQUE&lt;/span&gt;(classroomId, semester, &lt;span class=&#34;keyword&#34;&gt;year&lt;/span&gt;, classTime);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 唯一的一个集合&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;动态完整性约束dynamic-integrity-constraints&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动态完整性约束dynamic-integrity-constraints&#34;&gt;#&lt;/a&gt; 动态完整性约束（Dynamic Integrity Constraints）&lt;/h2&gt;
&lt;p&gt;动态完整性约束的目标是在数据发生变化时确保其合法性。这类约束在数据库的插入、更新、删除等操作后执行，以确保数据的完整性。它们常用于以下场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;维护复杂的业务规则&lt;/li&gt;
&lt;li&gt;确保数据的有效性&lt;/li&gt;
&lt;li&gt;在特定事件发生时，自动执行相应的操作&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-触发器triggers&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-触发器triggers&#34;&gt;#&lt;/a&gt; 1. 触发器（Triggers）&lt;/h3&gt;
&lt;p&gt;触发器是数据库中的一种机制，它可以在某些事件发生时（例如插入、更新或删除数据时）自动执行定义好的操作。触发器用于实现动态完整性约束，是动态约束的典型实现方式。&lt;/p&gt;
&lt;h4 id=&#34;11-触发器的组成部分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-触发器的组成部分&#34;&gt;#&lt;/a&gt; 1.1 触发器的组成部分：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;事件（Event）&lt;/strong&gt;：触发器是基于特定事件触发的，常见的事件有  &lt;code&gt;INSERT&lt;/code&gt; 、 &lt;code&gt;UPDATE&lt;/code&gt;  和  &lt;code&gt;DELETE&lt;/code&gt;  操作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;时机（Timing）&lt;/strong&gt;：触发器可以在事件发生之前（ &lt;code&gt;BEFORE&lt;/code&gt; ）或之后（ &lt;code&gt;AFTER&lt;/code&gt; ）执行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;操作（Action）&lt;/strong&gt;：当触发器被触发时，执行的 SQL 语句或函数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;作用范围（Scope）&lt;/strong&gt;：触发器可以设置为针对每一行（ &lt;code&gt;FOR EACH ROW&lt;/code&gt; ）或针对整个语句（ &lt;code&gt;FOR EACH STATEMENT&lt;/code&gt; ）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;12-触发器的基本语法以-postgresql-为例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-触发器的基本语法以-postgresql-为例&#34;&gt;#&lt;/a&gt; 1.2 触发器的基本语法（以 PostgreSQL 为例）：&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TRIGGER&lt;/span&gt; trigger_name&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; BEFORE &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; AFTER &amp;#125; &amp;#123; &lt;span class=&#34;keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;UPDATE&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;DELETE&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;ON&lt;/span&gt; table_name&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FOR&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;EACH&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;ROW&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;EXECUTE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;FUNCTION&lt;/span&gt; function_name();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;13-触发器的示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13-触发器的示例&#34;&gt;#&lt;/a&gt; 1.3 触发器的示例：&lt;/h4&gt;
&lt;p&gt;以下示例演示了如何在员工表中使用触发器来检查员工的工资是否在合理范围内（大于 0 且小于 100,000）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;创建触发器函数&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;OR&lt;/span&gt; REPLACE &lt;span class=&#34;keyword&#34;&gt;FUNCTION&lt;/span&gt; check_salary() &lt;span class=&#34;keyword&#34;&gt;RETURNS&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TRIGGER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;AS&lt;/span&gt; $$&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;BEGIN&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    IF NEW.salary &lt;span class=&#34;operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;THEN&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        RAISE EXCEPTION &lt;span class=&#34;string&#34;&gt;&amp;#x27;工资不能为负&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ELSIF NEW.salary &lt;span class=&#34;operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;100000&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;THEN&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        RAISE EXCEPTION &lt;span class=&#34;string&#34;&gt;&amp;#x27;工资超出上限&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;END&lt;/span&gt; IF;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;RETURN&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;NEW&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;END&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$$ &lt;span class=&#34;keyword&#34;&gt;LANGUAGE&lt;/span&gt; plpgsql;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;触发器函数语法介绍：&lt;br&gt;
函数介绍&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;CREATE OR REPLACE FUNCTION&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这是 PostgreSQL 中用于创建或替换（更新）一个函数的语法。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;CREATE&lt;/code&gt; &lt;/strong&gt; 表示创建一个新的函数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;OR REPLACE&lt;/code&gt; &lt;/strong&gt; 表示如果同名函数已经存在，那么替换它。这避免了先删除再重新创建函数的麻烦。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;check_salary()&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这是函数的名称和参数部分。在这个例子中，函数名是  &lt;code&gt;check_salary&lt;/code&gt; ，括号中为空表示这个函数不接受任何参数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;RETURNS TRIGGER&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;RETURNS&lt;/code&gt; &lt;/strong&gt; 表示函数的返回类型。&lt;/li&gt;
&lt;li&gt;在这个例子中，返回类型是 &lt;strong&gt; &lt;code&gt;TRIGGER&lt;/code&gt; &lt;/strong&gt;，意味着这是一个触发器函数，必须返回触发器类型的数据。所有的触发器函数都必须返回  &lt;code&gt;TRIGGER&lt;/code&gt;  类型，而不是其他类型（如  &lt;code&gt;INTEGER&lt;/code&gt;  或  &lt;code&gt;TEXT&lt;/code&gt; ）。&lt;/li&gt;
&lt;li&gt;触发器函数的返回值通常是  &lt;code&gt;NEW&lt;/code&gt;  或  &lt;code&gt;OLD&lt;/code&gt; ，表示返回新插入 / 更新的数据行或旧删除 / 更新的数据行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;AS $$&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;AS $$&lt;/code&gt; &lt;/strong&gt; 是用来定义函数体的部分。 &lt;code&gt;$$&lt;/code&gt;  是一个定界符（delimiter），表示函数体的开始和结束。定界符  &lt;code&gt;$$&lt;/code&gt;  让函数体内的代码可以包含单引号等特殊字符，而不需要对这些字符进行转义。&lt;/li&gt;
&lt;li&gt;换句话说， &lt;code&gt;$$&lt;/code&gt;  包围的是函数的具体逻辑和代码。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;语法介绍&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;NEW&lt;/code&gt;  和  &lt;code&gt;OLD&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;NEW&lt;/code&gt; &lt;/strong&gt;：在  &lt;code&gt;INSERT&lt;/code&gt;  或  &lt;code&gt;UPDATE&lt;/code&gt;  操作中， &lt;code&gt;NEW&lt;/code&gt;  包含新插入或更新的数据行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;OLD&lt;/code&gt; &lt;/strong&gt;：在  &lt;code&gt;UPDATE&lt;/code&gt;  或  &lt;code&gt;DELETE&lt;/code&gt;  操作中， &lt;code&gt;OLD&lt;/code&gt;  包含被更新或删除的旧数据行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;TG_OP&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表示触发器触发的操作类型，可以是  &lt;code&gt;&#39;INSERT&#39;&lt;/code&gt; 、 &lt;code&gt;&#39;UPDATE&#39;&lt;/code&gt; 、 &lt;code&gt;&#39;DELETE&#39;&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;TG_WHEN&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表示触发器是  &lt;code&gt;BEFORE&lt;/code&gt;  还是  &lt;code&gt;AFTER&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;TG_TABLE_NAME&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表示触发器所属的表的名字。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;TG_NARGS&lt;/code&gt;  和  &lt;code&gt;TG_ARGV[]&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于访问在创建触发器时传递给触发器函数的参数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;创建触发器&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TRIGGER&lt;/span&gt; salary_trigger&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;BEFORE &lt;span class=&#34;keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;UPDATE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;ON&lt;/span&gt; employees&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FOR&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;EACH&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;ROW&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;EXECUTE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;FUNCTION&lt;/span&gt; check_salary();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
 在这个例子中，每当试图插入或更新  &lt;code&gt;employees&lt;/code&gt;  表时，触发器会调用  &lt;code&gt;check_salary&lt;/code&gt;  函数，检查工资的合理性。如果工资不在合法范围内，会抛出异常并阻止该操作。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2-触发器的用途&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-触发器的用途&#34;&gt;#&lt;/a&gt; 2. 触发器的用途：&lt;/h3&gt;
&lt;p&gt;触发器可以用于以下几种主要场景：&lt;/p&gt;
&lt;h4 id=&#34;21-数据验证&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21-数据验证&#34;&gt;#&lt;/a&gt; 2.1 数据验证：&lt;/h4&gt;
&lt;p&gt;确保插入或更新的数据满足特定条件，例如值的范围或数据的一致性要求。触发器可以在数据变更之前检查数据是否符合约束条件，避免不合法的数据被插入或更新。&lt;/p&gt;
&lt;h4 id=&#34;22-自动计算&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-自动计算&#34;&gt;#&lt;/a&gt; 2.2 自动计算：&lt;/h4&gt;
&lt;p&gt;在插入或更新数据时，自动计算和更新相关字段的值。例如，可以创建一个触发器，在订单被更新时，自动重新计算总价。&lt;/p&gt;
&lt;h4 id=&#34;23-业务规则的执行&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#23-业务规则的执行&#34;&gt;#&lt;/a&gt; 2.3 业务规则的执行：&lt;/h4&gt;
&lt;p&gt;触发器可以帮助实施复杂的业务规则。例如，确保员工的工资不得高于其主管的工资。&lt;/p&gt;
&lt;h4 id=&#34;24-维护数据完整性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#24-维护数据完整性&#34;&gt;#&lt;/a&gt; 2.4 维护数据完整性：&lt;/h4&gt;
&lt;p&gt;触发器可以用于自动更新或删除与某个表相关的其他表中的数据。例如，使用  &lt;code&gt;ON DELETE CASCADE&lt;/code&gt;  可以在删除某条主记录时自动删除所有相关的子记录。&lt;/p&gt;
&lt;h4 id=&#34;25-审计和日志记录&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#25-审计和日志记录&#34;&gt;#&lt;/a&gt; 2.5 审计和日志记录：&lt;/h4&gt;
&lt;p&gt;触发器可以用于跟踪对关键数据的修改，记录修改操作的时间、执行人等信息。例如，每当某个用户数据被修改时，可以记录修改时间和修改内容。&lt;/p&gt;
&lt;h3 id=&#34;3-触发器的执行时机&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-触发器的执行时机&#34;&gt;#&lt;/a&gt; 3. 触发器的执行时机：&lt;/h3&gt;
&lt;p&gt;触发器可以配置为在以下几个时机触发：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BEFORE&lt;/strong&gt;：在执行  &lt;code&gt;INSERT&lt;/code&gt; 、 &lt;code&gt;UPDATE&lt;/code&gt;  或  &lt;code&gt;DELETE&lt;/code&gt;  语句之前触发。通常用于验证数据的有效性或在操作之前修改数据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AFTER&lt;/strong&gt;：在执行  &lt;code&gt;INSERT&lt;/code&gt; 、 &lt;code&gt;UPDATE&lt;/code&gt;  或  &lt;code&gt;DELETE&lt;/code&gt;  语句之后触发。通常用于更新其他表、执行日志记录等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-动态完整性约束的示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-动态完整性约束的示例&#34;&gt;#&lt;/a&gt; 4. 动态完整性约束的示例：&lt;/h3&gt;
&lt;p&gt;以下是一个动态完整性约束的具体例子，当在  &lt;code&gt;employees&lt;/code&gt;  表中插入或更新员工记录时，触发器会检查新插入或更新的工资是否合法：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 创建触发器函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;OR&lt;/span&gt; REPLACE &lt;span class=&#34;keyword&#34;&gt;FUNCTION&lt;/span&gt; check_salary() &lt;span class=&#34;keyword&#34;&gt;RETURNS&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TRIGGER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;AS&lt;/span&gt; $$&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;BEGIN&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    IF NEW.salary &lt;span class=&#34;operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;THEN&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        RAISE EXCEPTION &lt;span class=&#34;string&#34;&gt;&amp;#x27;工资不能为负&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ELSIF NEW.salary &lt;span class=&#34;operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;100000&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;THEN&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        RAISE EXCEPTION &lt;span class=&#34;string&#34;&gt;&amp;#x27;工资超出上限&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;END&lt;/span&gt; IF;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;RETURN&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;NEW&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;END&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$$ &lt;span class=&#34;keyword&#34;&gt;LANGUAGE&lt;/span&gt; plpgsql;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 创建触发器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TRIGGER&lt;/span&gt; salary_trigger&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;BEFORE &lt;span class=&#34;keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;UPDATE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;ON&lt;/span&gt; employees&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FOR&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;EACH&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;ROW&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;EXECUTE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;FUNCTION&lt;/span&gt; check_salary();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在这个例子中， &lt;code&gt;check_salary&lt;/code&gt;  函数定义了工资必须在合理范围内的约束条件。通过  &lt;code&gt;salary_trigger&lt;/code&gt;  触发器，每当有新的员工数据被插入或员工数据被更新时，系统会自动检查工资的合法性。如果工资不合法，操作将被阻止。&lt;/p&gt;
&lt;h3 id=&#34;5-触发器的管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-触发器的管理&#34;&gt;#&lt;/a&gt; 5. 触发器的管理：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;禁用触发器&lt;/strong&gt;：在某些情况下（例如批量数据导入），可能需要临时禁用触发器以提高性能。可以使用以下命令禁用触发器：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TABLE&lt;/span&gt; employees DISABLE &lt;span class=&#34;keyword&#34;&gt;TRIGGER&lt;/span&gt; salary_trigger;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;启用触发器&lt;/strong&gt;：执行完批量数据导入后，可以重新启用触发器：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TABLE&lt;/span&gt; employees ENABLE &lt;span class=&#34;keyword&#34;&gt;TRIGGER&lt;/span&gt; salary_trigger&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;删除触发器&lt;/strong&gt;：如果不再需要某个触发器，可以使用以下命令删除它：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TABLE&lt;/span&gt; employees ENABLE &lt;span class=&#34;keyword&#34;&gt;TRIGGER&lt;/span&gt; salary_trigger&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结：&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;动态完整性约束&lt;/strong&gt;通过触发器机制来确保数据库在变化过程中的数据完整性和一致性。它们主要用于处理数据库状态改变时的约束条件，维护数据的合法性。触发器在数据库系统中具有强大的功能，能够在数据操作的过程中自动执行验证和维护操作，但使用时也需要谨慎，以避免性能问题或意外的副作用。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;处理违规约束&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#处理违规约束&#34;&gt;#&lt;/a&gt; 处理违规约束&lt;/h2&gt;
&lt;h3 id=&#34;1-拒绝操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-拒绝操作&#34;&gt;#&lt;/a&gt; 1. &lt;strong&gt;拒绝操作&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义&lt;/strong&gt;：当数据库中的某个操作违反了完整性约束时，最常见的处理方式就是&lt;strong&gt;拒绝执行该操作&lt;/strong&gt;。这种方式直接阻止违反约束的插入、更新或删除操作，从而确保数据的完整性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;场景&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;插入一条记录时，如果它违反了唯一约束或主键约束，数据库将拒绝该插入操作。&lt;/li&gt;
&lt;li&gt;更新某列数据时，如果更新后的值不符合  &lt;code&gt;CHECK&lt;/code&gt;  约束条件（例如超过了规定的范围），则数据库会拒绝该更新操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;INTO&lt;/span&gt; Student (student_id, age) &lt;span class=&#34;keyword&#34;&gt;VALUES&lt;/span&gt; (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;-5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
 如果  &lt;code&gt;age&lt;/code&gt;  列的  &lt;code&gt;CHECK&lt;/code&gt;  约束是年龄必须大于 0，则插入负年龄的操作会被拒绝。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-回滚事务&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-回滚事务&#34;&gt;#&lt;/a&gt; 2. &lt;strong&gt;回滚事务&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义&lt;/strong&gt;：如果在一个事务中有任何操作违反了完整性约束，整个事务将会被&lt;strong&gt;回滚&lt;/strong&gt;。回滚意味着撤销事务中的所有操作，使数据库返回到事务开始之前的状态。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;场景&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;一个事务中包含多个操作，如果其中任意一个操作违反了完整性约束，所有操作都将被撤销。这样做可以确保数据库不会因为部分执行成功而陷入不一致的状态。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;BEGIN&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 插入一条记录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;INTO&lt;/span&gt; Accounts (account_id, balance) &lt;span class=&#34;keyword&#34;&gt;VALUES&lt;/span&gt; (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 尝试更新一条违反约束的记录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;UPDATE&lt;/span&gt; Accounts &lt;span class=&#34;keyword&#34;&gt;SET&lt;/span&gt; balance &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;-200&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; account_id &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 如果更新违反了 CHECK 约束，回滚整个事务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;ROLLBACK&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
 在此示例中， &lt;code&gt;balance&lt;/code&gt;  列可能有一个  &lt;code&gt;CHECK&lt;/code&gt;  约束，要求余额不能为负数。如果  &lt;code&gt;UPDATE&lt;/code&gt;  语句违反了该约束，整个事务会回滚， &lt;code&gt;INSERT&lt;/code&gt;  操作也会被撤销。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-执行维护操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-执行维护操作&#34;&gt;#&lt;/a&gt; 3. &lt;strong&gt;执行 “维护” 操作&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：当约束被违反时，数据库可以自动执行某些&lt;strong&gt;维护操作&lt;/strong&gt;，以恢复数据库到合法状态。这种方式常见于外键约束和级联操作（Cascading Actions）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;场景&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当删除父表中的记录时，如果该记录被子表引用，外键约束可能会被违反。在这种情况下，数据库可以通过&lt;strong&gt;级联删除&lt;/strong&gt;或&lt;strong&gt;级联更新&lt;/strong&gt;来维护数据一致性。&lt;/li&gt;
&lt;li&gt;另一种维护操作是将相关外键字段设置为  &lt;code&gt;NULL&lt;/code&gt;  或默认值，以避免参照完整性约束被违反。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;维护操作类型&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ON DELETE CASCADE&lt;/strong&gt;：删除父表记录时，自动删除子表中所有引用该记录的行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ON UPDATE CASCADE&lt;/strong&gt;：当父表中关键字段被更新时，自动更新子表中所有相关的外键字段。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ON DELETE/UPDATE SET NULL&lt;/strong&gt;：当父表记录被删除或更新时，子表的外键列被设置为  &lt;code&gt;NULL&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ON DELETE/UPDATE SET DEFAULT&lt;/strong&gt;：当父表记录被删除或更新时，子表的外键列被设置为默认值。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;br&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;TABLE&lt;/span&gt; Orders (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    order_id &lt;span class=&#34;type&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;PRIMARY&lt;/span&gt; KEY,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    customer_id &lt;span class=&#34;type&#34;&gt;INT&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;FOREIGN&lt;/span&gt; KEY (customer_id) &lt;span class=&#34;keyword&#34;&gt;REFERENCES&lt;/span&gt; Customers(customer_id)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;ON&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;DELETE&lt;/span&gt; CASCADE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
 在这个示例中，如果  &lt;code&gt;Customers&lt;/code&gt;  表中的某个客户记录被删除，则  &lt;code&gt;Orders&lt;/code&gt;  表中所有引用该客户的订单记录也会自动被删除。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;总结-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结-2&#34;&gt;#&lt;/a&gt; 总结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;拒绝操作&lt;/strong&gt;：直接阻止违反约束的插入、更新或删除操作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;回滚事务&lt;/strong&gt;：如果事务中的任何操作违反约束，整个事务都会被撤销。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;执行维护操作&lt;/strong&gt;：通过设置级联操作或将外键字段设置为  &lt;code&gt;NULL&lt;/code&gt;  或默认值，自动维护数据库的完整性。&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="数据库" scheme="http://example.com/categories/database/" />
        <updated>2024-09-16T13:03:36.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/09/16/%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</id>
        <title>基础操作</title>
        <link rel="alternate" href="http://example.com/2024/09/16/%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/"/>
        <content type="html">&lt;h1 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;label warning&#34;&gt;1&lt;/span&gt;&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# H1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;## H2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;### H3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#### H4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;##### H5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;###### H6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Alternatively, for H1 and H2, an underline-ish style:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Alt-H1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;======&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Alt-H2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;------&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;h1&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#h1&#34;&gt;#&lt;/a&gt; H1&lt;/h1&gt;
&lt;h2 id=&#34;h2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#h2&#34;&gt;#&lt;/a&gt; H2&lt;/h2&gt;
&lt;h3 id=&#34;h3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#h3&#34;&gt;#&lt;/a&gt; H3&lt;/h3&gt;
&lt;h4 id=&#34;h4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#h4&#34;&gt;#&lt;/a&gt; H4&lt;/h4&gt;
&lt;h5 id=&#34;h5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#h5&#34;&gt;#&lt;/a&gt; H5&lt;/h5&gt;
&lt;h6 id=&#34;h6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#h6&#34;&gt;#&lt;/a&gt; H6&lt;/h6&gt;
&lt;p&gt;Alternatively, for H1 and H2, an underline-ish style:&lt;/p&gt;
&lt;h1 id=&#34;alt-h1&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#alt-h1&#34;&gt;#&lt;/a&gt; Alt-H1&lt;/h1&gt;
&lt;h2 id=&#34;alt-h2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#alt-h2&#34;&gt;#&lt;/a&gt; Alt-H2&lt;/h2&gt;
&lt;h3 id=&#34;md文档开头标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#md文档开头标签&#34;&gt;#&lt;/a&gt; md 文档开头标签&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight md&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;title: 置顶文章 #文章标题&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;date: 文章发布是年/月/日 时/分/秒 #时间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sticky: true #是否置顶&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;categories: # 文章分类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; [计算机科学, Java, 零基础学Java语言-浙江大学-翁恺]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cover: http://placehold.it/350x150.jpg #文章封面&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tags: #标签&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;description： #简介&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;创建文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建文件&#34;&gt;#&lt;/a&gt; 创建文件&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo new new-project&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;启动本地服务&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#启动本地服务&#34;&gt;#&lt;/a&gt; 启动本地服务&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=&#34;&gt;Server&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s&#34;&gt;Generating&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s&#34;&gt;Deployment&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;常用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用&#34;&gt;#&lt;/a&gt; 常用&lt;/h2&gt;
&lt;h3 id=&#34;代码块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#代码块&#34;&gt;#&lt;/a&gt;  &lt;code&gt;代码块&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight md&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;literal&#34;&gt;&amp;amp;#96;&lt;/span&gt;&lt;span class=&#34;literal&#34;&gt;&amp;amp;#96;&lt;/span&gt;&lt;span class=&#34;literal&#34;&gt;&amp;amp;#96;&lt;/span&gt;java 行高亮 https://shoka.lostyu.me 参考链接 mark:1,6-7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import java.util.Scanner;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Scanner in = new Scanner (System.in);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 输入 Scan 之后，按下键盘 Alt + “/” 键，Eclipse 下自动补全。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println (in.nextLine ());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println (&amp;quot;Hello&amp;quot; + &amp;quot;world.&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;literal&#34;&gt;&amp;amp;#96;&lt;/span&gt;&lt;span class=&#34;literal&#34;&gt;&amp;amp;#96;&lt;/span&gt;&lt;span class=&#34;literal&#34;&gt;&amp;amp;#96;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;literal&#34;&gt;&amp;amp;#96;&lt;/span&gt;&lt;span class=&#34;literal&#34;&gt;&amp;amp;#96;&lt;/span&gt;&lt;span class=&#34;literal&#34;&gt;&amp;amp;#96;&lt;/span&gt;bash 命令行提示符 command:(&amp;quot;[root@localhost] $&amp;quot;:1,9-10||&amp;quot;[admin@remotehost] #&amp;quot;:4-6)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/usr/home/chris/bin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ls -la&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;total 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x   2 chris  chris     11 Jan 10 16:48 .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr--r-x  45 chris  chris     92 Feb 14 11:10 ..&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-rwxr-xr-x   1 chris  chris    444 Aug 25  2013 backup&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-rwxr-xr-x   1 chris  chris    642 Jan 17 14:42 deploy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git add -A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git commit -m &amp;quot;update&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git push&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;literal&#34;&gt;&amp;amp;#96;&lt;/span&gt;&lt;span class=&#34;literal&#34;&gt;&amp;amp;#96;&lt;/span&gt;&lt;span class=&#34;literal&#34;&gt;&amp;amp;#96;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;行高亮&lt;/span&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=&#34;&gt;参考链接 mark:1,6-7&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.util.Scanner;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Scanner&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Scanner&lt;/span&gt; (System.in);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 输入 Scan 之后，按下键盘 Alt + “/” 键，Eclipse 下自动补全。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println (in.nextLine ());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println (&lt;span class=&#34;string&#34;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt; + &lt;span class=&#34;string&#34;&gt;&amp;quot;world.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption&gt;&lt;span&gt;命令行提示符 command:(&#34;[root@localhost] $&#34;:1,9-10||&#34;[admin@remotehost] #&#34;:4-6)&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;pwd&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/usr/home/chris/bin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;ls&lt;/span&gt; -la&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;total 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x   2 chris  chris     11 Jan 10 16:48 .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr--r-x  45 chris  chris     92 Feb 14 11:10 ..&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-rwxr-xr-x   1 chris  chris    444 Aug 25  2013 backup&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-rwxr-xr-x   1 chris  chris    642 Jan 17 14:42 deploy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git add -A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git commit -m &lt;span class=&#34;string&#34;&gt;&amp;quot;update&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git push&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;note-提醒块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#note-提醒块&#34;&gt;#&lt;/a&gt;  &lt;code&gt;note&lt;/code&gt;  提醒块&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;111&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;figure class=&#34;highlight markdown&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;:::default&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;默认默认&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:::&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:::primary&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;基本基本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:::&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:::info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;提示提示&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:::&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:::success&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;成功成功&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:::&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:::warning&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;警告警告&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:::&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:::danger&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;危险危险&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:::&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:::danger no-icon&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;危险危险&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:::&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;div class=&#34;note default&#34;&gt;
&lt;p&gt;默认默认&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;note primary&#34;&gt;
&lt;p&gt;基本基本&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;提示提示&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;note success&#34;&gt;
&lt;p&gt;成功成功&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;note warning&#34;&gt;
&lt;p&gt;警告警告&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;note danger&#34;&gt;
&lt;p&gt;危险危险&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;note danger no-icon&#34;&gt;
&lt;p&gt;危险危险&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&#34;label标签块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#label标签块&#34;&gt;#&lt;/a&gt; label 标签块&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;&lt;figure class=&#34;highlight md&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[default]&amp;#123;.label&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[primary]&amp;#123;.label .primary&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[info]&amp;#123;.label .info&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[:heavy&lt;span class=&#34;emphasis&#34;&gt;_check_&lt;/span&gt;mark:success]&amp;#123;.label .success&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[warning]&amp;#123;.label .warning&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[:broken&lt;span class=&#34;emphasis&#34;&gt;_heart:danger]&amp;#123;.label .danger&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
&lt;span class=&#34;label&#34;&gt;default&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;label primary&#34;&gt;primary&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;label info&#34;&gt;info&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;label success&#34;&gt;✔️success&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;label warning&#34;&gt;warning&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;label danger&#34;&gt;💔danger&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;文字特效&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文字特效&#34;&gt;#&lt;/a&gt; 文字特效&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;&lt;figure class=&#34;highlight md&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;++下划线++&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;++波浪线++&amp;#123;.wavy&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;++着重点++&amp;#123;.dot&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;++紫色下划线++&amp;#123;.primary&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;++绿色波浪线++&amp;#123;.wavy .success&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;++黄色着重点++&amp;#123;.dot .warning&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;~~删除线～～&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;~~红色删除线～～&amp;#123;.danger&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;==荧光高亮==&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[赤橙黄绿青蓝紫]&amp;#123;.rainbow&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[红色]&amp;#123;.red&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[粉色]&amp;#123;.pink&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[橙色]&amp;#123;.orange&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[黄色]&amp;#123;.yellow&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[绿色]&amp;#123;.green&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[靛青]&amp;#123;.aqua&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[蓝色]&amp;#123;.blue&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[紫色]&amp;#123;.purple&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[灰色]&amp;#123;.grey&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;快捷键 [Ctrl]&amp;#123;.kbd&amp;#125; + [C]&amp;#123;.kbd .red&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;H~2~0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29^th^&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;ins&gt;下划线&lt;/ins&gt;&lt;br&gt;
&lt;ins class=&#34;wavy&#34;&gt;波浪线&lt;/ins&gt;&lt;br&gt;
&lt;ins class=&#34;dot&#34;&gt;着重点&lt;/ins&gt;&lt;br&gt;
&lt;ins class=&#34;primary&#34;&gt;紫色下划线&lt;/ins&gt;&lt;br&gt;
&lt;ins class=&#34;wavy success&#34;&gt;绿色波浪线&lt;/ins&gt;&lt;br&gt;
&lt;ins class=&#34;dot warning&#34;&gt;黄色着重点&lt;/ins&gt;&lt;br&gt;
～～删除线～～&lt;br&gt;
~~ &lt;s class=&#34;danger&#34;&gt;红色删除线&lt;/s&gt;&lt;br&gt;
&lt;mark&gt;荧光高亮&lt;/mark&gt;&lt;br&gt;
&lt;span class=&#34;rainbow&#34;&gt;赤橙黄绿青蓝紫&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;red&#34;&gt;红色&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;pink&#34;&gt;粉色&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;orange&#34;&gt;橙色&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;yellow&#34;&gt;黄色&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;green&#34;&gt;绿色&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;aqua&#34;&gt;靛青&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;blue&#34;&gt;蓝色&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;purple&#34;&gt;紫色&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;grey&#34;&gt;灰色&lt;/span&gt;&lt;br&gt;
快捷键 &lt;span class=&#34;kbd&#34;&gt;Ctrl&lt;/span&gt; + &lt;span class=&#34;kbd red&#34;&gt;C&lt;/span&gt;&lt;br&gt;
H&lt;sub&gt;2&lt;/sub&gt;0&lt;br&gt;
29&lt;sup&gt;th&lt;/sup&gt;&lt;/p&gt;
&lt;h2 id=&#34;collapse-折叠块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#collapse-折叠块&#34;&gt;#&lt;/a&gt; collapse 折叠块&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;&lt;figure class=&#34;highlight md&#34;&gt;&lt;figcaption&gt;&lt;span&gt;row&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;+++ 默认默认 这里是一段文字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;++ 下划线 ++&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+++&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+++primary 紫色&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:::info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;参考信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:::&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; 第一行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; 第二行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+++&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+++info  蓝色&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;;;;id3 卡片 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;这里是卡片 1 的内容&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;;;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;;;;id3 卡片 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;这里是卡片 2 的内容&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;;;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+++&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+++success 绿色&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;% links %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; site: 優萌初華&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  url: https://shoka.lostyu.me&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  color: &amp;quot;#e9546b&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;% endlinks %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+++&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+++warning 黄色&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;!! 警告警告警告警告警告！！&amp;#123;.bulr&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[label]&amp;#123;.label .success&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+++&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+++danger 红色&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[danger]&amp;#123;.label .danger&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+++&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;默认默认 这里是一段文字&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;++ 下划线 ++&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;primary&#34;&gt;&lt;summary&gt;紫色&lt;/summary&gt;&lt;div&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;参考信息&lt;/p&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;第一行&lt;/li&gt;
&lt;li&gt;第二行&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;info&#34;&gt;&lt;summary&gt;蓝色&lt;/summary&gt;&lt;div&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id3&#34; data-title=&#34;卡片 1&#34;&gt;
&lt;p&gt;这里是卡片 1 的内容&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id3&#34; data-title=&#34;卡片 2&#34;&gt;
&lt;p&gt;这里是卡片 2 的内容&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;success&#34;&gt;&lt;summary&gt;绿色&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;&lt;div class=&#34;links&#34;&gt;&lt;div class=&#34;item&#34; title=&#34;優萌初華&#34; style=&#34;--block-color:#e9546b;&#34;&gt;&lt;span class=&#34;exturl image&#34; data-url=&#34;aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=&#34; data-background-image=&#34;/images/404.png&#34;&gt;&lt;/span&gt;
          &lt;div class=&#34;info&#34;&gt;
          &lt;span class=&#34;exturl title&#34; data-url=&#34;aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=&#34;&gt;優萌初華&lt;/span&gt;
          &lt;p class=&#34;desc&#34;&gt;https://shoka.lostyu.me&lt;/p&gt;
          &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;warning&#34;&gt;&lt;summary&gt;黄色&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;!! 警告警告警告警告警告！！{.bulr}&lt;br&gt;
&lt;span class=&#34;label success&#34;&gt;label&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;details class=&#34;danger&#34;&gt;&lt;summary&gt;红色&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;&lt;span class=&#34;label danger&#34;&gt;danger&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;p&gt;&lt;img data-src=&#34;https://blog-1321157486.cos.ap-nanjing.myqcloud.com/database/cover_1.jpg&#34; alt=&#34;图片描述&#34;&gt;&lt;/p&gt;
</content>
        <updated>2024-09-16T09:39:52.951Z</updated>
    </entry>
</feed>
