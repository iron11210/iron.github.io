{
    "version": "https://jsonfeed.org/version/1",
    "title": "杂项笔记 • All posts by \"计算机网络\" category",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/09/19/networks/network_lec_6/",
            "url": "http://example.com/2024/09/19/networks/network_lec_6/",
            "title": "lecture_6Network Layer 3",
            "date_published": "2024-09-19T10:01:35.177Z",
            "content_html": "<h1 id=\"链路状态ls和距离向量dv算法介绍\"><a class=\"markdownIt-Anchor\" href=\"#链路状态ls和距离向量dv算法介绍\">#</a> <span class=\"label danger\">链路状态（LS）和距离向量（DV）算法介绍</span></h1>\n<h2 id=\"1-链路状态算法link-state-ls\"><a class=\"markdownIt-Anchor\" href=\"#1-链路状态算法link-state-ls\">#</a> 1. 链路状态算法（Link State, LS）</h2>\n<p><strong>工作原理</strong>：</p>\n<ul>\n<li>\n<p><strong>全局视图</strong>：每个路由器都会维护整个网络的拓扑结构，收集关于整个网络的链路状态信息。</p>\n</li>\n<li>\n<p><strong>链路状态广播</strong>：路由器向网络中的所有其他路由器发送链路状态包（LSA），每个路由器都会广播自己与邻居的连接情况，并包括这些连接的代价。</p>\n</li>\n<li>\n<p><strong>拓扑图更新</strong>：所有路由器根据接收到的链路状态信息构建整个网络的拓扑图。</p>\n</li>\n<li>\n<p><strong>Dijkstra 算法</strong>：一旦所有路由器获得了网络的拓扑图，它们会使用 Dijkstra 算法来计算从自己到每个目的地的最短路径。</p>\n</li>\n</ul>\n<p><strong>优点</strong>：</p>\n<ul>\n<li>\n<p><strong>快速收敛</strong>：LS 算法基于整个网络的拓扑信息进行计算，能够迅速做出决策。</p>\n</li>\n<li>\n<p><strong>路径选择精准</strong>：由于路由器了解整个网络的状态，它能够选择最佳路径，包括负载均衡等高级策略。</p>\n</li>\n</ul>\n<p><strong>缺点</strong>：</p>\n<ul>\n<li>\n<p><strong>计算复杂度高</strong>：LS 算法的时间复杂度为 O (n^2) 或 O (n log n)，对于大型网络来说，计算和存储的开销较大。</p>\n</li>\n<li>\n<p><strong>消息传递量大</strong>：路由器需要定期向整个网络广播链路状态更新，因此在大规模网络中会产生较多的控制流量。</p>\n</li>\n</ul>\n<h2 id=\"2-距离向量算法distance-vector-dv\"><a class=\"markdownIt-Anchor\" href=\"#2-距离向量算法distance-vector-dv\">#</a> 2. 距离向量算法（Distance Vector, DV）</h2>\n<p><strong>工作原理</strong>：</p>\n<ul>\n<li>\n<p><strong>局部视图</strong>：每个路由器只与邻居路由器交换路由信息，并且每个路由器只知道自己到邻居的距离。</p>\n</li>\n<li>\n<p><strong>迭代更新</strong>：每个路由器通过与邻居交换 “距离向量”（表示到每个目的地的距离）来逐步构建自己的路由表。路由器根据邻居的信息逐步更新自己的最优路径。</p>\n</li>\n<li>\n<p><strong>贝尔曼 - 福特算法</strong>：DV 算法依赖贝尔曼 - 福特算法进行路径选择，它通过多次迭代更新到各个目的地的最短距离。</p>\n</li>\n</ul>\n<p><strong>优点</strong>：</p>\n<ul>\n<li>\n<p><strong>简单</strong>：DV 算法实现相对简单，路由器只需要与邻居交换信息，不需要维护整个网络的拓扑图。</p>\n</li>\n<li>\n<p><strong>计算开销小</strong>：由于只与邻居交换信息，计算和消息传递的开销较低。</p>\n</li>\n</ul>\n<p><strong>缺点</strong>：</p>\n<ul>\n<li>\n<p><strong>收敛较慢</strong>：由于信息传播速度较慢，尤其在大网络中，收敛时间可能较长。出现网络故障时，DV 算法需要较长时间才能收敛到新的状态。</p>\n</li>\n<li>\n<p><strong>计数到无穷大问题</strong>：当网络中出现环路时，DV 算法可能陷入 “计数到无穷大” 的问题，即路由器不断增大其距离估计值，直到达到上限（通常为 16 跳）。</p>\n</li>\n</ul>\n<h2 id=\"3-ls和dv的比较\"><a class=\"markdownIt-Anchor\" href=\"#3-ls和dv的比较\">#</a> 3. LS 和 DV 的比较</h2>\n<ul>\n<li>\n<p><strong>消息复杂度</strong>：LS 的消息复杂度为 O (nE)（n 为节点数，E 为边数），DV 的消息复杂度较低，因为它只在邻居之间交换消息。</p>\n</li>\n<li>\n<p><strong>收敛速度</strong>：LS 算法收敛快，DV 算法由于逐步迭代，收敛时间可能较长。</p>\n</li>\n<li>\n<p><strong>应用场景</strong>：LS 算法适用于需要高精度、高可靠性的网络（如 OSPF 协议），DV 算法则适用于较小、简单的网络（如 RIP 协议）。</p>\n</li>\n</ul>\n<p>总结来说，LS 算法适合对全网有更高掌控需求的大型网络，DV 算法则更适合小型或中型网络中简单的路径选择需求。</p>\n<h1 id=\"分层路由hierarchical-routing\"><a class=\"markdownIt-Anchor\" href=\"#分层路由hierarchical-routing\">#</a> <span class=\"label danger\">分层路由 (Hierarchical routing)</span></h1>\n<h2 id=\"1as\"><a class=\"markdownIt-Anchor\" href=\"#1as\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovLzEuQVM=\">1.AS</span> (autonomous systems)</h2>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/09/17/networks/hello-world/",
            "url": "http://example.com/2024/09/17/networks/hello-world/",
            "title": "Hello World",
            "date_published": "2024-09-16T15:34:21.998Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n<p>I LOVE YOU</p>\n",
            "tags": []
        }
    ]
}